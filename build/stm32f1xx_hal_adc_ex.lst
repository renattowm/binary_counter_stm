ARM GAS  /tmp/cckKL5DZ.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c"
  18              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_ADCEx_Calibration_Start
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_ADCEx_Calibration_Start:
  26              	.LFB65:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @file    stm32f1xx_hal_adc_ex.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          "stm32f1xx_hal_adc.c".
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * Copyright (c) 2016 STMicroelectronics.
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   [..] 
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       available in file of generic functions "stm32f1xx_hal_adc.c".
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #include "stm32f1xx_hal.h"
ARM GAS  /tmp/cckKL5DZ.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @addtogroup STM32F1xx_HAL_Driver
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief ADC Extension HAL module driver
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Delay for ADC calibration:                                               */
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Hardware prerequisite before starting a calibration: the ADC must have   */
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* been in power-on state for at least two ADC clock cycles.                */
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: ADC clock cycles                                                   */
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES       2U
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Timeout value for ADC calibration                                        */
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Value defined to be higher than worst cases: low clocks freq,            */
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* prescaler 4, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT          10U
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         10U
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @}
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /* Private functions ---------------------------------------------------------*/
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Extended IO operation functions
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  *  @brief    Extended Extended Input and Output operation functions
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  *
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @verbatim    
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
ARM GAS  /tmp/cckKL5DZ.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @endverbatim
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         During calibration process, ADC is enabled. ADC is let enabled at
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         the completion of this function.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
  27              		.loc 1 120 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 90B5     		push	{r4, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  44              		.loc 1 121 21
  45 0008 0023     		movs	r3, #0
  46 000a FB75     		strb	r3, [r7, #23]
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tickstart;
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
  47              		.loc 1 123 17
  48 000c 0023     		movs	r3, #0
  49 000e FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cckKL5DZ.s 			page 4


 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  50              		.loc 1 129 3
  51 0010 7B68     		ldr	r3, [r7, #4]
  52 0012 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
  53 0016 012B     		cmp	r3, #1
  54 0018 01D1     		bne	.L2
  55              		.loc 1 129 3 is_stmt 0 discriminator 1
  56 001a 0223     		movs	r3, #2
  57 001c 97E0     		b	.L3
  58              	.L2:
  59              		.loc 1 129 3 discriminator 2
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 0122     		movs	r2, #1
  62 0022 83F82420 		strb	r2, [r3, #36]
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    /* 1. Disable ADC peripheral                                                 */
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    tmp_hal_status = ADC_ConversionStop_Disable(hadc);
  63              		.loc 1 132 21 is_stmt 1 discriminator 2
  64 0026 7868     		ldr	r0, [r7, #4]
  65 0028 FFF7FEFF 		bl	ADC_ConversionStop_Disable
  66 002c 0346     		mov	r3, r0
  67 002e FB75     		strb	r3, [r7, #23]
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    /* 2. Calibration prerequisite delay before starting the calibration.       */
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    /*    - ADC must be enabled for at least two ADC clock cycles               */
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    tmp_hal_status = ADC_Enable(hadc);
  68              		.loc 1 136 21 discriminator 2
  69 0030 7868     		ldr	r0, [r7, #4]
  70 0032 FFF7FEFF 		bl	ADC_Enable
  71 0036 0346     		mov	r3, r0
  72 0038 FB75     		strb	r3, [r7, #23]
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    /* Check if ADC is effectively enabled */
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    if (tmp_hal_status == HAL_OK)
  73              		.loc 1 139 7 discriminator 2
  74 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  75 003c 002B     		cmp	r3, #0
  76 003e 40F08180 		bne	.L4
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****    {
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      /* Set ADC state */
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      ADC_STATE_CLR_SET(hadc->State,
  77              		.loc 1 142 6
  78 0042 7B68     		ldr	r3, [r7, #4]
  79 0044 9B6A     		ldr	r3, [r3, #40]
  80 0046 23F48853 		bic	r3, r3, #4352
  81 004a 23F00203 		bic	r3, r3, #2
  82 004e 43F00202 		orr	r2, r3, #2
  83 0052 7B68     		ldr	r3, [r7, #4]
  84 0054 9A62     		str	r2, [r3, #40]
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                        HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                        HAL_ADC_STATE_BUSY_INTERNAL);
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
ARM GAS  /tmp/cckKL5DZ.s 			page 5


 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Hardware prerequisite: delay before starting the calibration.          */
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles.  */
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Wait for the expected ADC clock cycles delay */
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     wait_loop_index = ((SystemCoreClock
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
  85              		.loc 1 150 25
  86 0056 404B     		ldr	r3, .L13
  87 0058 1C68     		ldr	r4, [r3]
  88              		.loc 1 150 27
  89 005a 0220     		movs	r0, #2
  90 005c FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
  91 0060 0346     		mov	r3, r0
  92              		.loc 1 150 25
  93 0062 B4FBF3F3 		udiv	r3, r4, r3
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                        * ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES        );
  94              		.loc 1 151 24
  95 0066 5B00     		lsls	r3, r3, #1
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
  96              		.loc 1 149 21
  97 0068 FB60     		str	r3, [r7, #12]
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(wait_loop_index != 0U)
  98              		.loc 1 153 10
  99 006a 02E0     		b	.L5
 100              	.L6:
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       wait_loop_index--;
 101              		.loc 1 155 22
 102 006c FB68     		ldr	r3, [r7, #12]
 103 006e 013B     		subs	r3, r3, #1
 104 0070 FB60     		str	r3, [r7, #12]
 105              	.L5:
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 106              		.loc 1 153 27
 107 0072 FB68     		ldr	r3, [r7, #12]
 108 0074 002B     		cmp	r3, #0
 109 0076 F9D1     		bne	.L6
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 3. Resets ADC calibration registers */  
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_RSTCAL);
 110              		.loc 1 159 5
 111 0078 7B68     		ldr	r3, [r7, #4]
 112 007a 1B68     		ldr	r3, [r3]
 113 007c 9A68     		ldr	r2, [r3, #8]
 114 007e 7B68     		ldr	r3, [r7, #4]
 115 0080 1B68     		ldr	r3, [r3]
 116 0082 42F00802 		orr	r2, r2, #8
 117 0086 9A60     		str	r2, [r3, #8]
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 118              		.loc 1 161 17
 119 0088 FFF7FEFF 		bl	HAL_GetTick
 120 008c 3861     		str	r0, [r7, #16]
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait for calibration reset completion */
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
ARM GAS  /tmp/cckKL5DZ.s 			page 6


 121              		.loc 1 164 10
 122 008e 1BE0     		b	.L7
 123              	.L9:
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 124              		.loc 1 166 11
 125 0090 FFF7FEFF 		bl	HAL_GetTick
 126 0094 0246     		mov	r2, r0
 127              		.loc 1 166 25
 128 0096 3B69     		ldr	r3, [r7, #16]
 129 0098 D31A     		subs	r3, r2, r3
 130              		.loc 1 166 9
 131 009a 0A2B     		cmp	r3, #10
 132 009c 14D9     		bls	.L7
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
 133              		.loc 1 169 12
 134 009e 7B68     		ldr	r3, [r7, #4]
 135 00a0 1B68     		ldr	r3, [r3]
 136 00a2 9B68     		ldr	r3, [r3, #8]
 137 00a4 03F00803 		and	r3, r3, #8
 138              		.loc 1 169 11
 139 00a8 002B     		cmp	r3, #0
 140 00aa 0DD0     		beq	.L7
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 141              		.loc 1 172 11
 142 00ac 7B68     		ldr	r3, [r7, #4]
 143 00ae 9B6A     		ldr	r3, [r3, #40]
 144 00b0 23F01203 		bic	r3, r3, #18
 145 00b4 43F01002 		orr	r2, r3, #16
 146 00b8 7B68     		ldr	r3, [r7, #4]
 147 00ba 9A62     		str	r2, [r3, #40]
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                             HAL_ADC_STATE_ERROR_INTERNAL);
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Process unlocked */
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 148              		.loc 1 177 11
 149 00bc 7B68     		ldr	r3, [r7, #4]
 150 00be 0022     		movs	r2, #0
 151 00c0 83F82420 		strb	r2, [r3, #36]
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           return HAL_ERROR;
 152              		.loc 1 179 18
 153 00c4 0123     		movs	r3, #1
 154 00c6 42E0     		b	.L3
 155              	.L7:
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 156              		.loc 1 164 11
 157 00c8 7B68     		ldr	r3, [r7, #4]
 158 00ca 1B68     		ldr	r3, [r3]
 159 00cc 9B68     		ldr	r3, [r3, #8]
 160 00ce 03F00803 		and	r3, r3, #8
 161 00d2 002B     		cmp	r3, #0
ARM GAS  /tmp/cckKL5DZ.s 			page 7


 162 00d4 DCD1     		bne	.L9
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* 4. Start ADC calibration */
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_CAL);
 163              		.loc 1 185 5
 164 00d6 7B68     		ldr	r3, [r7, #4]
 165 00d8 1B68     		ldr	r3, [r3]
 166 00da 9A68     		ldr	r2, [r3, #8]
 167 00dc 7B68     		ldr	r3, [r7, #4]
 168 00de 1B68     		ldr	r3, [r3]
 169 00e0 42F00402 		orr	r2, r2, #4
 170 00e4 9A60     		str	r2, [r3, #8]
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 171              		.loc 1 187 17
 172 00e6 FFF7FEFF 		bl	HAL_GetTick
 173 00ea 3861     		str	r0, [r7, #16]
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
 174              		.loc 1 190 10
 175 00ec 1BE0     		b	.L10
 176              	.L12:
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 177              		.loc 1 192 11
 178 00ee FFF7FEFF 		bl	HAL_GetTick
 179 00f2 0246     		mov	r2, r0
 180              		.loc 1 192 25
 181 00f4 3B69     		ldr	r3, [r7, #16]
 182 00f6 D31A     		subs	r3, r2, r3
 183              		.loc 1 192 9
 184 00f8 0A2B     		cmp	r3, #10
 185 00fa 14D9     		bls	.L10
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
 186              		.loc 1 195 12
 187 00fc 7B68     		ldr	r3, [r7, #4]
 188 00fe 1B68     		ldr	r3, [r3]
 189 0100 9B68     		ldr	r3, [r3, #8]
 190 0102 03F00403 		and	r3, r3, #4
 191              		.loc 1 195 11
 192 0106 002B     		cmp	r3, #0
 193 0108 0DD0     		beq	.L10
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 194              		.loc 1 198 11
 195 010a 7B68     		ldr	r3, [r7, #4]
 196 010c 9B6A     		ldr	r3, [r3, #40]
 197 010e 23F01203 		bic	r3, r3, #18
 198 0112 43F01002 		orr	r2, r3, #16
 199 0116 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckKL5DZ.s 			page 8


 200 0118 9A62     		str	r2, [r3, #40]
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                             HAL_ADC_STATE_ERROR_INTERNAL);
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Process unlocked */
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 201              		.loc 1 203 11
 202 011a 7B68     		ldr	r3, [r7, #4]
 203 011c 0022     		movs	r2, #0
 204 011e 83F82420 		strb	r2, [r3, #36]
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           return HAL_ERROR;
 205              		.loc 1 205 18
 206 0122 0123     		movs	r3, #1
 207 0124 13E0     		b	.L3
 208              	.L10:
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 209              		.loc 1 190 11
 210 0126 7B68     		ldr	r3, [r7, #4]
 211 0128 1B68     		ldr	r3, [r3]
 212 012a 9B68     		ldr	r3, [r3, #8]
 213 012c 03F00403 		and	r3, r3, #4
 214 0130 002B     		cmp	r3, #0
 215 0132 DCD1     		bne	.L12
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 216              		.loc 1 211 5
 217 0134 7B68     		ldr	r3, [r7, #4]
 218 0136 9B6A     		ldr	r3, [r3, #40]
 219 0138 23F00303 		bic	r3, r3, #3
 220 013c 43F00102 		orr	r2, r3, #1
 221 0140 7B68     		ldr	r3, [r7, #4]
 222 0142 9A62     		str	r2, [r3, #40]
 223              	.L4:
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 224              		.loc 1 217 3
 225 0144 7B68     		ldr	r3, [r7, #4]
 226 0146 0022     		movs	r2, #0
 227 0148 83F82420 		strb	r2, [r3, #36]
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 228              		.loc 1 220 10
 229 014c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 230              	.L3:
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 231              		.loc 1 221 1
 232 014e 1846     		mov	r0, r3
ARM GAS  /tmp/cckKL5DZ.s 			page 9


 233 0150 1C37     		adds	r7, r7, #28
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 12
 236 0152 BD46     		mov	sp, r7
 237              	.LCFI4:
 238              		.cfi_def_cfa_register 13
 239              		@ sp needed
 240 0154 90BD     		pop	{r4, r7, pc}
 241              	.L14:
 242 0156 00BF     		.align	2
 243              	.L13:
 244 0158 00000000 		.word	SystemCoreClock
 245              		.cfi_endproc
 246              	.LFE65:
 248              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 249              		.align	1
 250              		.global	HAL_ADCEx_InjectedStart
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	HAL_ADCEx_InjectedStart:
 256              	.LFB66:
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 257              		.loc 1 230 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 84B0     		sub	sp, sp, #16
 267              	.LCFI6:
 268              		.cfi_def_cfa_offset 24
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI7:
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 273              		.loc 1 231 21
 274 0008 0023     		movs	r3, #0
 275 000a FB73     		strb	r3, [r7, #15]
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
ARM GAS  /tmp/cckKL5DZ.s 			page 10


 276              		.loc 1 237 3
 277 000c 7B68     		ldr	r3, [r7, #4]
 278 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 279 0012 012B     		cmp	r3, #1
 280 0014 01D1     		bne	.L16
 281              		.loc 1 237 3 is_stmt 0 discriminator 1
 282 0016 0223     		movs	r3, #2
 283 0018 70E0     		b	.L17
 284              	.L16:
 285              		.loc 1 237 3 discriminator 2
 286 001a 7B68     		ldr	r3, [r7, #4]
 287 001c 0122     		movs	r2, #1
 288 001e 83F82420 		strb	r2, [r3, #36]
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 289              		.loc 1 240 20 is_stmt 1 discriminator 2
 290 0022 7868     		ldr	r0, [r7, #4]
 291 0024 FFF7FEFF 		bl	ADC_Enable
 292 0028 0346     		mov	r3, r0
 293 002a FB73     		strb	r3, [r7, #15]
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 294              		.loc 1 243 6 discriminator 2
 295 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 296 002e 002B     		cmp	r3, #0
 297 0030 5FD1     		bne	.L18
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 298              		.loc 1 248 5
 299 0032 7B68     		ldr	r3, [r7, #4]
 300 0034 9B6A     		ldr	r3, [r3, #40]
 301 0036 23F44053 		bic	r3, r3, #12288
 302 003a 23F00103 		bic	r3, r3, #1
 303 003e 43F48052 		orr	r2, r3, #4096
 304 0042 7B68     		ldr	r3, [r7, #4]
 305 0044 9A62     		str	r2, [r3, #40]
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of independent mode or multimode (for devices with several ADCs): */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set multimode state.                                                   */
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 306              		.loc 1 254 9
 307 0046 7B68     		ldr	r3, [r7, #4]
 308 0048 1B68     		ldr	r3, [r3]
 309              		.loc 1 254 8
 310 004a 2E4A     		ldr	r2, .L27
 311 004c 9342     		cmp	r3, r2
 312 004e 05D1     		bne	.L19
 313              		.loc 1 254 9 discriminator 1
 314 0050 2D4B     		ldr	r3, .L27+4
 315 0052 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cckKL5DZ.s 			page 11


 316 0054 03F47023 		and	r3, r3, #983040
 317 0058 002B     		cmp	r3, #0
 318 005a 06D1     		bne	.L20
 319              	.L19:
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 320              		.loc 1 256 7
 321 005c 7B68     		ldr	r3, [r7, #4]
 322 005e 9B6A     		ldr	r3, [r3, #40]
 323 0060 23F48012 		bic	r2, r3, #1048576
 324 0064 7B68     		ldr	r3, [r7, #4]
 325 0066 9A62     		str	r2, [r3, #40]
 326 0068 05E0     		b	.L21
 327              	.L20:
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 328              		.loc 1 260 7
 329 006a 7B68     		ldr	r3, [r7, #4]
 330 006c 9B6A     		ldr	r3, [r3, #40]
 331 006e 43F48012 		orr	r2, r3, #1048576
 332 0072 7B68     		ldr	r3, [r7, #4]
 333 0074 9A62     		str	r2, [r3, #40]
 334              	.L21:
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 335              		.loc 1 267 9
 336 0076 7B68     		ldr	r3, [r7, #4]
 337 0078 9B6A     		ldr	r3, [r3, #40]
 338 007a 03F48073 		and	r3, r3, #256
 339              		.loc 1 267 8
 340 007e 002B     		cmp	r3, #0
 341 0080 02D1     		bne	.L22
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 342              		.loc 1 270 7
 343 0082 7B68     		ldr	r3, [r7, #4]
 344 0084 0022     		movs	r2, #0
 345 0086 DA62     		str	r2, [r3, #44]
 346              	.L22:
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 347              		.loc 1 276 5
 348 0088 7B68     		ldr	r3, [r7, #4]
 349 008a 0022     		movs	r2, #0
 350 008c 83F82420 		strb	r2, [r3, #36]
ARM GAS  /tmp/cckKL5DZ.s 			page 12


 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 351              		.loc 1 280 5
 352 0090 7B68     		ldr	r3, [r7, #4]
 353 0092 1B68     		ldr	r3, [r3]
 354 0094 6FF00402 		mvn	r2, #4
 355 0098 1A60     		str	r2, [r3]
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of multimode enabled (for devices with several ADCs): if ADC is   */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* slave, ADC is enabled only (conversion is not started). If ADC is      */
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* master, ADC is enabled and conversion is started.                      */
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO))
 356              		.loc 1 291 9
 357 009a 7B68     		ldr	r3, [r7, #4]
 358 009c 1B68     		ldr	r3, [r3]
 359 009e 5B68     		ldr	r3, [r3, #4]
 360 00a0 03F48063 		and	r3, r3, #1024
 361              		.loc 1 291 8
 362 00a4 002B     		cmp	r3, #0
 363 00a6 28D1     		bne	.L26
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (ADC_IS_SOFTWARE_START_INJECTED(hadc)     &&
 364              		.loc 1 293 11
 365 00a8 7B68     		ldr	r3, [r7, #4]
 366 00aa 1B68     		ldr	r3, [r3]
 367 00ac 9B68     		ldr	r3, [r3, #8]
 368 00ae 03F4E043 		and	r3, r3, #28672
 369              		.loc 1 293 10
 370 00b2 B3F5E04F 		cmp	r3, #28672
 371 00b6 13D1     		bne	.L24
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 372              		.loc 1 294 11 discriminator 1
 373 00b8 7B68     		ldr	r3, [r7, #4]
 374 00ba 1B68     		ldr	r3, [r3]
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 375              		.loc 1 293 52 discriminator 1
 376 00bc 114A     		ldr	r2, .L27
 377 00be 9342     		cmp	r3, r2
 378 00c0 05D1     		bne	.L25
 379              		.loc 1 294 11 discriminator 2
 380 00c2 114B     		ldr	r3, .L27+4
 381 00c4 5B68     		ldr	r3, [r3, #4]
 382 00c6 03F47023 		and	r3, r3, #983040
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 383              		.loc 1 293 52 discriminator 2
 384 00ca 002B     		cmp	r3, #0
 385 00cc 08D1     		bne	.L24
 386              	.L25:
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/cckKL5DZ.s 			page 13


 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with SW start */
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
 387              		.loc 1 297 9
 388 00ce 7B68     		ldr	r3, [r7, #4]
 389 00d0 1B68     		ldr	r3, [r3]
 390 00d2 9A68     		ldr	r2, [r3, #8]
 391 00d4 7B68     		ldr	r3, [r7, #4]
 392 00d6 1B68     		ldr	r3, [r3]
 393 00d8 42F40212 		orr	r2, r2, #2129920
 394 00dc 9A60     		str	r2, [r3, #8]
 395 00de 0CE0     		b	.L26
 396              	.L24:
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with external trigger */
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
 397              		.loc 1 302 9
 398 00e0 7B68     		ldr	r3, [r7, #4]
 399 00e2 1B68     		ldr	r3, [r3]
 400 00e4 9A68     		ldr	r2, [r3, #8]
 401 00e6 7B68     		ldr	r3, [r7, #4]
 402 00e8 1B68     		ldr	r3, [r3]
 403 00ea 42F40042 		orr	r2, r2, #32768
 404 00ee 9A60     		str	r2, [r3, #8]
 405 00f0 03E0     		b	.L26
 406              	.L18:
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 407              		.loc 1 309 5
 408 00f2 7B68     		ldr	r3, [r7, #4]
 409 00f4 0022     		movs	r2, #0
 410 00f6 83F82420 		strb	r2, [r3, #36]
 411              	.L26:
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 412              		.loc 1 313 10
 413 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 414              	.L17:
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 415              		.loc 1 314 1
 416 00fc 1846     		mov	r0, r3
 417 00fe 1037     		adds	r7, r7, #16
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 8
 420 0100 BD46     		mov	sp, r7
 421              	.LCFI9:
 422              		.cfi_def_cfa_register 13
 423              		@ sp needed
 424 0102 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cckKL5DZ.s 			page 14


 425              	.L28:
 426              		.align	2
 427              	.L27:
 428 0104 00280140 		.word	1073817600
 429 0108 00240140 		.word	1073816576
 430              		.cfi_endproc
 431              	.LFE66:
 433              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 434              		.align	1
 435              		.global	HAL_ADCEx_InjectedStop
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	HAL_ADCEx_InjectedStop:
 441              	.LFB67:
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 442              		.loc 1 329 1
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 16
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              	.LCFI10:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 84B0     		sub	sp, sp, #16
 452              	.LCFI11:
 453              		.cfi_def_cfa_offset 24
 454 0004 00AF     		add	r7, sp, #0
 455              	.LCFI12:
 456              		.cfi_def_cfa_register 7
 457 0006 7860     		str	r0, [r7, #4]
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 458              		.loc 1 330 21
 459 0008 0023     		movs	r3, #0
 460 000a FB73     		strb	r3, [r7, #15]
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 461              		.loc 1 336 3
ARM GAS  /tmp/cckKL5DZ.s 			page 15


 462 000c 7B68     		ldr	r3, [r7, #4]
 463 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 464 0012 012B     		cmp	r3, #1
 465 0014 01D1     		bne	.L30
 466              		.loc 1 336 3 is_stmt 0 discriminator 1
 467 0016 0223     		movs	r3, #2
 468 0018 30E0     		b	.L31
 469              	.L30:
 470              		.loc 1 336 3 discriminator 2
 471 001a 7B68     		ldr	r3, [r7, #4]
 472 001c 0122     		movs	r2, #1
 473 001e 83F82420 		strb	r2, [r3, #36]
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 474              		.loc 1 344 12 is_stmt 1 discriminator 2
 475 0022 7B68     		ldr	r3, [r7, #4]
 476 0024 9B6A     		ldr	r3, [r3, #40]
 477              		.loc 1 344 20 discriminator 2
 478 0026 03F48073 		and	r3, r3, #256
 479              		.loc 1 344 5 discriminator 2
 480 002a 002B     		cmp	r3, #0
 481 002c 19D1     		bne	.L32
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 482              		.loc 1 345 6 discriminator 1
 483 002e 7B68     		ldr	r3, [r7, #4]
 484 0030 1B68     		ldr	r3, [r3]
 485 0032 5B68     		ldr	r3, [r3, #4]
 486 0034 03F48063 		and	r3, r3, #1024
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 487              		.loc 1 344 57 discriminator 1
 488 0038 002B     		cmp	r3, #0
 489 003a 12D1     		bne	.L32
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 490              		.loc 1 349 22
 491 003c 7868     		ldr	r0, [r7, #4]
 492 003e FFF7FEFF 		bl	ADC_ConversionStop_Disable
 493 0042 0346     		mov	r3, r0
 494 0044 FB73     		strb	r3, [r7, #15]
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 495              		.loc 1 352 8
 496 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 497 0048 002B     		cmp	r3, #0
 498 004a 12D1     		bne	.L34
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set ADC state */
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/cckKL5DZ.s 			page 16


 499              		.loc 1 355 7
 500 004c 7B68     		ldr	r3, [r7, #4]
 501 004e 9B6A     		ldr	r3, [r3, #40]
 502 0050 23F48853 		bic	r3, r3, #4352
 503 0054 23F00103 		bic	r3, r3, #1
 504 0058 43F00102 		orr	r2, r3, #1
 505 005c 7B68     		ldr	r3, [r7, #4]
 506 005e 9A62     		str	r2, [r3, #40]
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 507              		.loc 1 352 8
 508 0060 07E0     		b	.L34
 509              	.L32:
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 510              		.loc 1 363 5
 511 0062 7B68     		ldr	r3, [r7, #4]
 512 0064 9B6A     		ldr	r3, [r3, #40]
 513 0066 43F02002 		orr	r2, r3, #32
 514 006a 7B68     		ldr	r3, [r7, #4]
 515 006c 9A62     		str	r2, [r3, #40]
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 516              		.loc 1 365 20
 517 006e 0123     		movs	r3, #1
 518 0070 FB73     		strb	r3, [r7, #15]
 519              	.L34:
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 520              		.loc 1 369 3
 521 0072 7B68     		ldr	r3, [r7, #4]
 522 0074 0022     		movs	r2, #0
 523 0076 83F82420 		strb	r2, [r3, #36]
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 524              		.loc 1 372 10
 525 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 526              	.L31:
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 527              		.loc 1 373 1
 528 007c 1846     		mov	r0, r3
 529 007e 1037     		adds	r7, r7, #16
 530              	.LCFI13:
 531              		.cfi_def_cfa_offset 8
 532 0080 BD46     		mov	sp, r7
 533              	.LCFI14:
 534              		.cfi_def_cfa_register 13
 535              		@ sp needed
 536 0082 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cckKL5DZ.s 			page 17


 537              		.cfi_endproc
 538              	.LFE67:
 540              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 541              		.align	1
 542              		.global	HAL_ADCEx_InjectedPollForConversion
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 547              	HAL_ADCEx_InjectedPollForConversion:
 548              	.LFB68:
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 549              		.loc 1 382 1
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 24
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 90B5     		push	{r4, r7, lr}
 554              	.LCFI15:
 555              		.cfi_def_cfa_offset 12
 556              		.cfi_offset 4, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 87B0     		sub	sp, sp, #28
 560              	.LCFI16:
 561              		.cfi_def_cfa_offset 40
 562 0004 00AF     		add	r7, sp, #0
 563              	.LCFI17:
 564              		.cfi_def_cfa_register 7
 565 0006 7860     		str	r0, [r7, #4]
 566 0008 3960     		str	r1, [r7]
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tickstart;
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled and polling for each  */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t Conversion_Timeout_CPU_cycles = 0U;
 567              		.loc 1 387 17
 568 000a 0023     		movs	r3, #0
 569 000c FB60     		str	r3, [r7, #12]
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
 570              		.loc 1 388 12
 571 000e 0023     		movs	r3, #0
 572 0010 7B61     		str	r3, [r7, #20]
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Get timeout */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 573              		.loc 1 394 15
 574 0012 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cckKL5DZ.s 			page 18


 575 0016 3861     		str	r0, [r7, #16]
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion.                                                              */
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1), flag JEOC is used to determine the      */
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2), flag JEOC is set only at the end of the */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    sequence.                                                             */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    As flag JEOC is not set after each conversion, no timeout status can  */
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*    be set.                                                               */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)
 576              		.loc 1 412 12
 577 0018 7B68     		ldr	r3, [r7, #4]
 578 001a 1B68     		ldr	r3, [r3]
 579              		.loc 1 412 22
 580 001c 9B6B     		ldr	r3, [r3, #56]
 581              		.loc 1 412 29
 582 001e 03F44013 		and	r3, r3, #3145728
 583              		.loc 1 412 6
 584 0022 002B     		cmp	r3, #0
 585 0024 2AD1     		bne	.L36
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
 586              		.loc 1 415 10
 587 0026 21E0     		b	.L38
 588              	.L42:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 589              		.loc 1 418 9
 590 0028 3B68     		ldr	r3, [r7]
 591 002a B3F1FF3F 		cmp	r3, #-1
 592 002e 1DD0     		beq	.L38
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 593              		.loc 1 420 11
 594 0030 3B68     		ldr	r3, [r7]
 595 0032 002B     		cmp	r3, #0
 596 0034 07D0     		beq	.L39
 597              		.loc 1 420 33 discriminator 1
 598 0036 FFF7FEFF 		bl	HAL_GetTick
 599 003a 0246     		mov	r2, r0
 600              		.loc 1 420 47 discriminator 1
 601 003c 3B69     		ldr	r3, [r7, #16]
 602 003e D31A     		subs	r3, r2, r3
 603              		.loc 1 420 28 discriminator 1
 604 0040 3A68     		ldr	r2, [r7]
 605 0042 9A42     		cmp	r2, r3
ARM GAS  /tmp/cckKL5DZ.s 			page 19


 606 0044 12D2     		bcs	.L38
 607              	.L39:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* New check to avoid false timeout detection in case of preemption */
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           if(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
 608              		.loc 1 423 14
 609 0046 7B68     		ldr	r3, [r7, #4]
 610 0048 1B68     		ldr	r3, [r3]
 611 004a 1B68     		ldr	r3, [r3]
 612 004c 03F00403 		and	r3, r3, #4
 613              		.loc 1 423 13
 614 0050 002B     		cmp	r3, #0
 615 0052 0BD1     		bne	.L38
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             /* Update ADC state machine to timeout */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 616              		.loc 1 426 13
 617 0054 7B68     		ldr	r3, [r7, #4]
 618 0056 9B6A     		ldr	r3, [r3, #40]
 619 0058 43F00402 		orr	r2, r3, #4
 620 005c 7B68     		ldr	r3, [r7, #4]
 621 005e 9A62     		str	r2, [r3, #40]
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             /* Process unlocked */
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             __HAL_UNLOCK(hadc);
 622              		.loc 1 429 13
 623 0060 7B68     		ldr	r3, [r7, #4]
 624 0062 0022     		movs	r2, #0
 625 0064 83F82420 		strb	r2, [r3, #36]
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             return HAL_TIMEOUT;
 626              		.loc 1 431 20
 627 0068 0323     		movs	r3, #3
 628 006a B1E0     		b	.L41
 629              	.L38:
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 630              		.loc 1 415 11
 631 006c 7B68     		ldr	r3, [r7, #4]
 632 006e 1B68     		ldr	r3, [r3]
 633 0070 1B68     		ldr	r3, [r3]
 634 0072 03F00403 		and	r3, r3, #4
 635 0076 002B     		cmp	r3, #0
 636 0078 D6D0     		beq	.L42
 637 007a 70E0     		b	.L43
 638              	.L36:
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           }
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Computation of CPU clock cycles corresponding to ADC clock cycles   */
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*    and ADC maximum conversion cycles on all channels.                  */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*  - Wait for the expected ADC clock cycles delay                        */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ((SystemCoreClock
ARM GAS  /tmp/cckKL5DZ.s 			page 20


 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 639              		.loc 1 444 43
 640 007c 564B     		ldr	r3, .L58
 641 007e 1C68     		ldr	r4, [r3]
 642              		.loc 1 444 45
 643 0080 0220     		movs	r0, #2
 644 0082 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 645 0086 0346     		mov	r3, r0
 646              		.loc 1 444 43
 647 0088 B4FBF3F2 		udiv	r2, r4, r3
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                          * ADC_CONVCYCLES_MAX_RANGE(hadc)                 );
 648              		.loc 1 445 44
 649 008c 7B68     		ldr	r3, [r7, #4]
 650 008e 1B68     		ldr	r3, [r3]
 651 0090 1969     		ldr	r1, [r3, #16]
 652 0092 524B     		ldr	r3, .L58+4
 653 0094 0B40     		ands	r3, r3, r1
 654 0096 002B     		cmp	r3, #0
 655 0098 18D1     		bne	.L44
 656              		.loc 1 445 44 is_stmt 0 discriminator 1
 657 009a 7B68     		ldr	r3, [r7, #4]
 658 009c 1B68     		ldr	r3, [r3]
 659 009e D968     		ldr	r1, [r3, #12]
 660 00a0 4F4B     		ldr	r3, .L58+8
 661 00a2 0B40     		ands	r3, r3, r1
 662 00a4 002B     		cmp	r3, #0
 663 00a6 11D1     		bne	.L44
 664              		.loc 1 445 44 discriminator 3
 665 00a8 7B68     		ldr	r3, [r7, #4]
 666 00aa 1B68     		ldr	r3, [r3]
 667 00ac 1969     		ldr	r1, [r3, #16]
 668 00ae 4D4B     		ldr	r3, .L58+12
 669 00b0 0B40     		ands	r3, r3, r1
 670 00b2 002B     		cmp	r3, #0
 671 00b4 08D1     		bne	.L45
 672              		.loc 1 445 44 discriminator 5
 673 00b6 7B68     		ldr	r3, [r7, #4]
 674 00b8 1B68     		ldr	r3, [r3]
 675 00ba D968     		ldr	r1, [r3, #12]
 676 00bc 4A4B     		ldr	r3, .L58+16
 677 00be 0B40     		ands	r3, r3, r1
 678 00c0 002B     		cmp	r3, #0
 679 00c2 01D1     		bne	.L45
 680              		.loc 1 445 44 discriminator 7
 681 00c4 1423     		movs	r3, #20
 682 00c6 20E0     		b	.L47
 683              	.L45:
 684              		.loc 1 445 44 discriminator 8
 685 00c8 2923     		movs	r3, #41
 686 00ca 1EE0     		b	.L47
 687              	.L44:
 688              		.loc 1 445 44 discriminator 4
 689 00cc 7B68     		ldr	r3, [r7, #4]
 690 00ce 1B68     		ldr	r3, [r3]
 691 00d0 1969     		ldr	r1, [r3, #16]
 692 00d2 444B     		ldr	r3, .L58+12
 693 00d4 0B40     		ands	r3, r3, r1
ARM GAS  /tmp/cckKL5DZ.s 			page 21


 694 00d6 002B     		cmp	r3, #0
 695 00d8 06D1     		bne	.L48
 696              		.loc 1 445 44 discriminator 11
 697 00da 7B68     		ldr	r3, [r7, #4]
 698 00dc 1B68     		ldr	r3, [r3]
 699 00de D968     		ldr	r1, [r3, #12]
 700 00e0 414B     		ldr	r3, .L58+16
 701 00e2 0B40     		ands	r3, r3, r1
 702 00e4 002B     		cmp	r3, #0
 703 00e6 0DD0     		beq	.L49
 704              	.L48:
 705              		.loc 1 445 44 discriminator 14
 706 00e8 7B68     		ldr	r3, [r7, #4]
 707 00ea 1B68     		ldr	r3, [r3]
 708 00ec 1969     		ldr	r1, [r3, #16]
 709 00ee 3F4B     		ldr	r3, .L58+20
 710 00f0 0B40     		ands	r3, r3, r1
 711 00f2 002B     		cmp	r3, #0
 712 00f4 08D1     		bne	.L50
 713              		.loc 1 445 44 discriminator 15
 714 00f6 7B68     		ldr	r3, [r7, #4]
 715 00f8 1B68     		ldr	r3, [r3]
 716 00fa D968     		ldr	r1, [r3, #12]
 717 00fc 3B4B     		ldr	r3, .L58+20
 718 00fe 0B40     		ands	r3, r3, r1
 719 0100 002B     		cmp	r3, #0
 720 0102 01D1     		bne	.L50
 721              	.L49:
 722              		.loc 1 445 44 discriminator 17
 723 0104 5423     		movs	r3, #84
 724 0106 00E0     		b	.L47
 725              	.L50:
 726              		.loc 1 445 44 discriminator 18
 727 0108 FC23     		movs	r3, #252
 728              	.L47:
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                           / HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC))
 729              		.loc 1 443 39 is_stmt 1
 730 010a 02FB03F3 		mul	r3, r2, r3
 731 010e 7B61     		str	r3, [r7, #20]
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
 732              		.loc 1 447 10
 733 0110 21E0     		b	.L52
 734              	.L55:
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
 735              		.loc 1 450 9
 736 0112 3B68     		ldr	r3, [r7]
 737 0114 B3F1FF3F 		cmp	r3, #-1
 738 0118 1AD0     		beq	.L53
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 739              		.loc 1 452 11
 740 011a 3B68     		ldr	r3, [r7]
 741 011c 002B     		cmp	r3, #0
 742 011e 07D0     		beq	.L54
ARM GAS  /tmp/cckKL5DZ.s 			page 22


 743              		.loc 1 452 30 discriminator 1
 744 0120 FFF7FEFF 		bl	HAL_GetTick
 745 0124 0246     		mov	r2, r0
 746              		.loc 1 452 44 discriminator 1
 747 0126 3B69     		ldr	r3, [r7, #16]
 748 0128 D31A     		subs	r3, r2, r3
 749              		.loc 1 452 26 discriminator 1
 750 012a 3A68     		ldr	r2, [r7]
 751 012c 9A42     		cmp	r2, r3
 752 012e 0FD2     		bcs	.L53
 753              	.L54:
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* New check to avoid false timeout detection in case of preemption */
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           if(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
 754              		.loc 1 455 44
 755 0130 FB68     		ldr	r3, [r7, #12]
 756              		.loc 1 455 13
 757 0132 7A69     		ldr	r2, [r7, #20]
 758 0134 9A42     		cmp	r2, r3
 759 0136 0BD9     		bls	.L53
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             /* Update ADC state machine to timeout */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 760              		.loc 1 458 13
 761 0138 7B68     		ldr	r3, [r7, #4]
 762 013a 9B6A     		ldr	r3, [r3, #40]
 763 013c 43F00402 		orr	r2, r3, #4
 764 0140 7B68     		ldr	r3, [r7, #4]
 765 0142 9A62     		str	r2, [r3, #40]
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             /* Process unlocked */
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             __HAL_UNLOCK(hadc);
 766              		.loc 1 461 13
 767 0144 7B68     		ldr	r3, [r7, #4]
 768 0146 0022     		movs	r2, #0
 769 0148 83F82420 		strb	r2, [r3, #36]
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             return HAL_TIMEOUT;
 770              		.loc 1 463 20
 771 014c 0323     		movs	r3, #3
 772 014e 3FE0     		b	.L41
 773              	.L53:
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           }
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
 774              		.loc 1 467 37
 775 0150 FB68     		ldr	r3, [r7, #12]
 776 0152 0133     		adds	r3, r3, #1
 777 0154 FB60     		str	r3, [r7, #12]
 778              	.L52:
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 779              		.loc 1 447 41
 780 0156 FB68     		ldr	r3, [r7, #12]
 781 0158 7A69     		ldr	r2, [r7, #20]
 782 015a 9A42     		cmp	r2, r3
 783 015c D9D8     		bhi	.L55
ARM GAS  /tmp/cckKL5DZ.s 			page 23


 784              	.L43:
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Clear injected group conversion flag */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: On STM32F1 ADC, clear regular conversion flag raised               */
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* simultaneously.                                                          */
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC | ADC_FLAG_EOC);
 785              		.loc 1 474 3
 786 015e 7B68     		ldr	r3, [r7, #4]
 787 0160 1B68     		ldr	r3, [r3]
 788 0162 6FF00E02 		mvn	r2, #14
 789 0166 1A60     		str	r2, [r3]
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Update ADC state machine */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 790              		.loc 1 477 3
 791 0168 7B68     		ldr	r3, [r7, #4]
 792 016a 9B6A     		ldr	r3, [r3, #40]
 793 016c 43F40052 		orr	r2, r3, #8192
 794 0170 7B68     		ldr	r3, [r7, #4]
 795 0172 9A62     		str	r2, [r3, #40]
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
 796              		.loc 1 482 6
 797 0174 7B68     		ldr	r3, [r7, #4]
 798 0176 1B68     		ldr	r3, [r3]
 799 0178 9B68     		ldr	r3, [r3, #8]
 800 017a 03F4E043 		and	r3, r3, #28672
 801              		.loc 1 482 5
 802 017e B3F5E04F 		cmp	r3, #28672
 803 0182 12D0     		beq	.L56
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 804              		.loc 1 483 7 discriminator 1
 805 0184 7B68     		ldr	r3, [r7, #4]
 806 0186 1B68     		ldr	r3, [r3]
 807 0188 5B68     		ldr	r3, [r3, #4]
 808 018a 03F48063 		and	r3, r3, #1024
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 809              		.loc 1 482 63 discriminator 1
 810 018e 002B     		cmp	r3, #0
 811 0190 1DD1     		bne	.L57
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 812              		.loc 1 484 7
 813 0192 7B68     		ldr	r3, [r7, #4]
 814 0194 1B68     		ldr	r3, [r3]
 815 0196 9B68     		ldr	r3, [r3, #8]
 816 0198 03F46023 		and	r3, r3, #917504
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
 817              		.loc 1 483 58
 818 019c B3F5602F 		cmp	r3, #917504
 819 01a0 15D1     		bne	.L57
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
 820              		.loc 1 485 18
ARM GAS  /tmp/cckKL5DZ.s 			page 24


 821 01a2 7B68     		ldr	r3, [r7, #4]
 822 01a4 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
 823              		.loc 1 484 50
 824 01a6 002B     		cmp	r3, #0
 825 01a8 11D1     		bne	.L57
 826              	.L56:
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state */
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 827              		.loc 1 488 5
 828 01aa 7B68     		ldr	r3, [r7, #4]
 829 01ac 9B6A     		ldr	r3, [r3, #40]
 830 01ae 23F48052 		bic	r2, r3, #4096
 831 01b2 7B68     		ldr	r3, [r7, #4]
 832 01b4 9A62     		str	r2, [r3, #40]
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 833              		.loc 1 490 9
 834 01b6 7B68     		ldr	r3, [r7, #4]
 835 01b8 9B6A     		ldr	r3, [r3, #40]
 836 01ba 03F48073 		and	r3, r3, #256
 837              		.loc 1 490 8
 838 01be 002B     		cmp	r3, #0
 839 01c0 05D1     		bne	.L57
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 840              		.loc 1 492 7
 841 01c2 7B68     		ldr	r3, [r7, #4]
 842 01c4 9B6A     		ldr	r3, [r3, #40]
 843 01c6 43F00102 		orr	r2, r3, #1
 844 01ca 7B68     		ldr	r3, [r7, #4]
 845 01cc 9A62     		str	r2, [r3, #40]
 846              	.L57:
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC state */
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return HAL_OK;
 847              		.loc 1 497 10
 848 01ce 0023     		movs	r3, #0
 849              	.L41:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 850              		.loc 1 498 1
 851 01d0 1846     		mov	r0, r3
 852 01d2 1C37     		adds	r7, r7, #28
 853              	.LCFI18:
 854              		.cfi_def_cfa_offset 12
 855 01d4 BD46     		mov	sp, r7
 856              	.LCFI19:
 857              		.cfi_def_cfa_register 13
 858              		@ sp needed
 859 01d6 90BD     		pop	{r4, r7, pc}
 860              	.L59:
 861              		.align	2
 862              	.L58:
 863 01d8 00000000 		.word	SystemCoreClock
ARM GAS  /tmp/cckKL5DZ.s 			page 25


 864 01dc 24499224 		.word	613566756
 865 01e0 24499200 		.word	9586980
 866 01e4 92244912 		.word	306783378
 867 01e8 92244900 		.word	4793490
 868 01ec 49922400 		.word	2396745
 869              		.cfi_endproc
 870              	.LFE68:
 872              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 873              		.align	1
 874              		.global	HAL_ADCEx_InjectedStart_IT
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	HAL_ADCEx_InjectedStart_IT:
 880              	.LFB69:
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status.
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 881              		.loc 1 508 1
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 16
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885 0000 80B5     		push	{r7, lr}
 886              	.LCFI20:
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 84B0     		sub	sp, sp, #16
 891              	.LCFI21:
 892              		.cfi_def_cfa_offset 24
 893 0004 00AF     		add	r7, sp, #0
 894              	.LCFI22:
 895              		.cfi_def_cfa_register 7
 896 0006 7860     		str	r0, [r7, #4]
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 897              		.loc 1 509 21
 898 0008 0023     		movs	r3, #0
 899 000a FB73     		strb	r3, [r7, #15]
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 900              		.loc 1 515 3
 901 000c 7B68     		ldr	r3, [r7, #4]
 902 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 903 0012 012B     		cmp	r3, #1
 904 0014 01D1     		bne	.L61
 905              		.loc 1 515 3 is_stmt 0 discriminator 1
ARM GAS  /tmp/cckKL5DZ.s 			page 26


 906 0016 0223     		movs	r3, #2
 907 0018 78E0     		b	.L62
 908              	.L61:
 909              		.loc 1 515 3 discriminator 2
 910 001a 7B68     		ldr	r3, [r7, #4]
 911 001c 0122     		movs	r2, #1
 912 001e 83F82420 		strb	r2, [r3, #36]
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 913              		.loc 1 518 20 is_stmt 1 discriminator 2
 914 0022 7868     		ldr	r0, [r7, #4]
 915 0024 FFF7FEFF 		bl	ADC_Enable
 916 0028 0346     		mov	r3, r0
 917 002a FB73     		strb	r3, [r7, #15]
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 918              		.loc 1 521 6 discriminator 2
 919 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 920 002e 002B     		cmp	r3, #0
 921 0030 67D1     		bne	.L63
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 922              		.loc 1 526 5
 923 0032 7B68     		ldr	r3, [r7, #4]
 924 0034 9B6A     		ldr	r3, [r3, #40]
 925 0036 23F44053 		bic	r3, r3, #12288
 926 003a 23F00103 		bic	r3, r3, #1
 927 003e 43F48052 		orr	r2, r3, #4096
 928 0042 7B68     		ldr	r3, [r7, #4]
 929 0044 9A62     		str	r2, [r3, #40]
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Case of independent mode or multimode (for devices with several ADCs): */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set multimode state.                                                   */
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
 930              		.loc 1 532 9
 931 0046 7B68     		ldr	r3, [r7, #4]
 932 0048 1B68     		ldr	r3, [r3]
 933              		.loc 1 532 8
 934 004a 324A     		ldr	r2, .L72
 935 004c 9342     		cmp	r3, r2
 936 004e 05D1     		bne	.L64
 937              		.loc 1 532 9 discriminator 1
 938 0050 314B     		ldr	r3, .L72+4
 939 0052 5B68     		ldr	r3, [r3, #4]
 940 0054 03F47023 		and	r3, r3, #983040
 941 0058 002B     		cmp	r3, #0
 942 005a 06D1     		bne	.L65
 943              	.L64:
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
ARM GAS  /tmp/cckKL5DZ.s 			page 27


 944              		.loc 1 534 7
 945 005c 7B68     		ldr	r3, [r7, #4]
 946 005e 9B6A     		ldr	r3, [r3, #40]
 947 0060 23F48012 		bic	r2, r3, #1048576
 948 0064 7B68     		ldr	r3, [r7, #4]
 949 0066 9A62     		str	r2, [r3, #40]
 950 0068 05E0     		b	.L66
 951              	.L65:
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 952              		.loc 1 538 7
 953 006a 7B68     		ldr	r3, [r7, #4]
 954 006c 9B6A     		ldr	r3, [r3, #40]
 955 006e 43F48012 		orr	r2, r3, #1048576
 956 0072 7B68     		ldr	r3, [r7, #4]
 957 0074 9A62     		str	r2, [r3, #40]
 958              	.L66:
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 959              		.loc 1 545 9
 960 0076 7B68     		ldr	r3, [r7, #4]
 961 0078 9B6A     		ldr	r3, [r3, #40]
 962 007a 03F48073 		and	r3, r3, #256
 963              		.loc 1 545 8
 964 007e 002B     		cmp	r3, #0
 965 0080 02D1     		bne	.L67
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 966              		.loc 1 548 7
 967 0082 7B68     		ldr	r3, [r7, #4]
 968 0084 0022     		movs	r2, #0
 969 0086 DA62     		str	r2, [r3, #44]
 970              	.L67:
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 971              		.loc 1 554 5
 972 0088 7B68     		ldr	r3, [r7, #4]
 973 008a 0022     		movs	r2, #0
 974 008c 83F82420 		strb	r2, [r3, #36]
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 975              		.loc 1 558 5
 976 0090 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckKL5DZ.s 			page 28


 977 0092 1B68     		ldr	r3, [r3]
 978 0094 6FF00402 		mvn	r2, #4
 979 0098 1A60     		str	r2, [r3]
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 980              		.loc 1 561 5
 981 009a 7B68     		ldr	r3, [r7, #4]
 982 009c 1B68     		ldr	r3, [r3]
 983 009e 5A68     		ldr	r2, [r3, #4]
 984 00a0 7B68     		ldr	r3, [r7, #4]
 985 00a2 1B68     		ldr	r3, [r3]
 986 00a4 42F08002 		orr	r2, r2, #128
 987 00a8 5A60     		str	r2, [r3, #4]
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start conversion of injected group if software start has been selected */
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* and if automatic injected conversion is disabled.                      */
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO))
 988              		.loc 1 569 9
 989 00aa 7B68     		ldr	r3, [r7, #4]
 990 00ac 1B68     		ldr	r3, [r3]
 991 00ae 5B68     		ldr	r3, [r3, #4]
 992 00b0 03F48063 		and	r3, r3, #1024
 993              		.loc 1 569 8
 994 00b4 002B     		cmp	r3, #0
 995 00b6 28D1     		bne	.L71
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (ADC_IS_SOFTWARE_START_INJECTED(hadc)     &&
 996              		.loc 1 571 11
 997 00b8 7B68     		ldr	r3, [r7, #4]
 998 00ba 1B68     		ldr	r3, [r3]
 999 00bc 9B68     		ldr	r3, [r3, #8]
 1000 00be 03F4E043 		and	r3, r3, #28672
 1001              		.loc 1 571 10
 1002 00c2 B3F5E04F 		cmp	r3, #28672
 1003 00c6 13D1     		bne	.L69
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1004              		.loc 1 572 11 discriminator 1
 1005 00c8 7B68     		ldr	r3, [r7, #4]
 1006 00ca 1B68     		ldr	r3, [r3]
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1007              		.loc 1 571 52 discriminator 1
 1008 00cc 114A     		ldr	r2, .L72
 1009 00ce 9342     		cmp	r3, r2
 1010 00d0 05D1     		bne	.L70
 1011              		.loc 1 572 11 discriminator 2
 1012 00d2 114B     		ldr	r3, .L72+4
 1013 00d4 5B68     		ldr	r3, [r3, #4]
 1014 00d6 03F47023 		and	r3, r3, #983040
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc)  )
 1015              		.loc 1 571 52 discriminator 2
 1016 00da 002B     		cmp	r3, #0
 1017 00dc 08D1     		bne	.L69
ARM GAS  /tmp/cckKL5DZ.s 			page 29


 1018              	.L70:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with SW start */
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
 1019              		.loc 1 575 9
 1020 00de 7B68     		ldr	r3, [r7, #4]
 1021 00e0 1B68     		ldr	r3, [r3]
 1022 00e2 9A68     		ldr	r2, [r3, #8]
 1023 00e4 7B68     		ldr	r3, [r7, #4]
 1024 00e6 1B68     		ldr	r3, [r3]
 1025 00e8 42F40212 		orr	r2, r2, #2129920
 1026 00ec 9A60     		str	r2, [r3, #8]
 1027 00ee 0CE0     		b	.L71
 1028              	.L69:
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Start ADC conversion on injected group with external trigger */
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
 1029              		.loc 1 580 9
 1030 00f0 7B68     		ldr	r3, [r7, #4]
 1031 00f2 1B68     		ldr	r3, [r3]
 1032 00f4 9A68     		ldr	r2, [r3, #8]
 1033 00f6 7B68     		ldr	r3, [r7, #4]
 1034 00f8 1B68     		ldr	r3, [r3]
 1035 00fa 42F40042 		orr	r2, r2, #32768
 1036 00fe 9A60     		str	r2, [r3, #8]
 1037 0100 03E0     		b	.L71
 1038              	.L63:
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1039              		.loc 1 587 5
 1040 0102 7B68     		ldr	r3, [r7, #4]
 1041 0104 0022     		movs	r2, #0
 1042 0106 83F82420 		strb	r2, [r3, #36]
 1043              	.L71:
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1044              		.loc 1 591 10
 1045 010a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1046              	.L62:
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1047              		.loc 1 592 1
 1048 010c 1846     		mov	r0, r3
 1049 010e 1037     		adds	r7, r7, #16
 1050              	.LCFI23:
 1051              		.cfi_def_cfa_offset 8
 1052 0110 BD46     		mov	sp, r7
 1053              	.LCFI24:
 1054              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cckKL5DZ.s 			page 30


 1055              		@ sp needed
 1056 0112 80BD     		pop	{r7, pc}
 1057              	.L73:
 1058              		.align	2
 1059              	.L72:
 1060 0114 00280140 		.word	1073817600
 1061 0118 00240140 		.word	1073816576
 1062              		.cfi_endproc
 1063              	.LFE69:
 1065              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1066              		.align	1
 1067              		.global	HAL_ADCEx_InjectedStop_IT
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1072              	HAL_ADCEx_InjectedStop_IT:
 1073              	.LFB70:
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         is on going.
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1074              		.loc 1 607 1
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 16
 1077              		@ frame_needed = 1, uses_anonymous_args = 0
 1078 0000 80B5     		push	{r7, lr}
 1079              	.LCFI25:
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 84B0     		sub	sp, sp, #16
 1084              	.LCFI26:
 1085              		.cfi_def_cfa_offset 24
 1086 0004 00AF     		add	r7, sp, #0
 1087              	.LCFI27:
 1088              		.cfi_def_cfa_register 7
 1089 0006 7860     		str	r0, [r7, #4]
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1090              		.loc 1 608 21
 1091 0008 0023     		movs	r3, #0
 1092 000a FB73     		strb	r3, [r7, #15]
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
ARM GAS  /tmp/cckKL5DZ.s 			page 31


 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1093              		.loc 1 614 3
 1094 000c 7B68     		ldr	r3, [r7, #4]
 1095 000e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1096 0012 012B     		cmp	r3, #1
 1097 0014 01D1     		bne	.L75
 1098              		.loc 1 614 3 is_stmt 0 discriminator 1
 1099 0016 0223     		movs	r3, #2
 1100 0018 38E0     		b	.L76
 1101              	.L75:
 1102              		.loc 1 614 3 discriminator 2
 1103 001a 7B68     		ldr	r3, [r7, #4]
 1104 001c 0122     		movs	r2, #1
 1105 001e 83F82420 		strb	r2, [r3, #36]
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   are common)                                                            */
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
 1106              		.loc 1 622 12 is_stmt 1 discriminator 2
 1107 0022 7B68     		ldr	r3, [r7, #4]
 1108 0024 9B6A     		ldr	r3, [r3, #40]
 1109              		.loc 1 622 20 discriminator 2
 1110 0026 03F48073 		and	r3, r3, #256
 1111              		.loc 1 622 5 discriminator 2
 1112 002a 002B     		cmp	r3, #0
 1113 002c 21D1     		bne	.L77
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 1114              		.loc 1 623 6 discriminator 1
 1115 002e 7B68     		ldr	r3, [r7, #4]
 1116 0030 1B68     		ldr	r3, [r3]
 1117 0032 5B68     		ldr	r3, [r3, #4]
 1118 0034 03F48063 		and	r3, r3, #1024
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
 1119              		.loc 1 622 57 discriminator 1
 1120 0038 002B     		cmp	r3, #0
 1121 003a 1AD1     		bne	.L77
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 1122              		.loc 1 627 22
 1123 003c 7868     		ldr	r0, [r7, #4]
 1124 003e FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1125 0042 0346     		mov	r3, r0
 1126 0044 FB73     		strb	r3, [r7, #15]
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1127              		.loc 1 630 8
 1128 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1129 0048 002B     		cmp	r3, #0
 1130 004a 1AD1     		bne	.L79
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/cckKL5DZ.s 			page 32


 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1131              		.loc 1 633 7
 1132 004c 7B68     		ldr	r3, [r7, #4]
 1133 004e 1B68     		ldr	r3, [r3]
 1134 0050 5A68     		ldr	r2, [r3, #4]
 1135 0052 7B68     		ldr	r3, [r7, #4]
 1136 0054 1B68     		ldr	r3, [r3]
 1137 0056 22F08002 		bic	r2, r2, #128
 1138 005a 5A60     		str	r2, [r3, #4]
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set ADC state */
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1139              		.loc 1 636 7
 1140 005c 7B68     		ldr	r3, [r7, #4]
 1141 005e 9B6A     		ldr	r3, [r3, #40]
 1142 0060 23F48853 		bic	r3, r3, #4352
 1143 0064 23F00103 		bic	r3, r3, #1
 1144 0068 43F00102 		orr	r2, r3, #1
 1145 006c 7B68     		ldr	r3, [r7, #4]
 1146 006e 9A62     		str	r2, [r3, #40]
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 1147              		.loc 1 630 8
 1148 0070 07E0     		b	.L79
 1149              	.L77:
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1150              		.loc 1 644 5
 1151 0072 7B68     		ldr	r3, [r7, #4]
 1152 0074 9B6A     		ldr	r3, [r3, #40]
 1153 0076 43F02002 		orr	r2, r3, #32
 1154 007a 7B68     		ldr	r3, [r7, #4]
 1155 007c 9A62     		str	r2, [r3, #40]
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 1156              		.loc 1 646 20
 1157 007e 0123     		movs	r3, #1
 1158 0080 FB73     		strb	r3, [r7, #15]
 1159              	.L79:
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1160              		.loc 1 650 3
 1161 0082 7B68     		ldr	r3, [r7, #4]
 1162 0084 0022     		movs	r2, #0
 1163 0086 83F82420 		strb	r2, [r3, #36]
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1164              		.loc 1 653 10
ARM GAS  /tmp/cckKL5DZ.s 			page 33


 1165 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1166              	.L76:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1167              		.loc 1 654 1
 1168 008c 1846     		mov	r0, r3
 1169 008e 1037     		adds	r7, r7, #16
 1170              	.LCFI28:
 1171              		.cfi_def_cfa_offset 8
 1172 0090 BD46     		mov	sp, r7
 1173              	.LCFI29:
 1174              		.cfi_def_cfa_register 13
 1175              		@ sp needed
 1176 0092 80BD     		pop	{r7, pc}
 1177              		.cfi_endproc
 1178              	.LFE70:
 1180              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 1181              		.align	1
 1182              		.global	HAL_ADCEx_MultiModeStart_DMA
 1183              		.syntax unified
 1184              		.thumb
 1185              		.thumb_func
 1187              	HAL_ADCEx_MultiModeStart_DMA:
 1188              	.LFB71:
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105xC) || defined (STM32F107xC
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         through DMA.
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Multimode must have been previously configured using 
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - DMA transfer complete
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - DMA half transfer
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note:  On STM32F1 devices, ADC slave regular group must be configured 
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         with conversion trigger ADC_SOFTWARE_START.
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note:  ADC slave can be enabled preliminarily using single-mode  
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADC_Start() function.
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1189              		.loc 1 676 1
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 72
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193 0000 80B5     		push	{r7, lr}
 1194              	.LCFI30:
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 92B0     		sub	sp, sp, #72
 1199              	.LCFI31:
 1200              		.cfi_def_cfa_offset 80
ARM GAS  /tmp/cckKL5DZ.s 			page 34


 1201 0004 00AF     		add	r7, sp, #0
 1202              	.LCFI32:
 1203              		.cfi_def_cfa_register 7
 1204 0006 F860     		str	r0, [r7, #12]
 1205 0008 B960     		str	r1, [r7, #8]
 1206 000a 7A60     		str	r2, [r7, #4]
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1207              		.loc 1 677 21
 1208 000c 0023     		movs	r3, #0
 1209 000e 87F84730 		strb	r3, [r7, #71]
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave={0};
 1210              		.loc 1 678 21
 1211 0012 07F11403 		add	r3, r7, #20
 1212 0016 3022     		movs	r2, #48
 1213 0018 0021     		movs	r1, #0
 1214 001a 1846     		mov	r0, r3
 1215 001c FFF7FEFF 		bl	memset
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1216              		.loc 1 685 3
 1217 0020 FB68     		ldr	r3, [r7, #12]
 1218 0022 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1219 0026 012B     		cmp	r3, #1
 1220 0028 01D1     		bne	.L81
 1221              		.loc 1 685 3 is_stmt 0 discriminator 1
 1222 002a 0223     		movs	r3, #2
 1223 002c 8FE0     		b	.L89
 1224              	.L81:
 1225              		.loc 1 685 3 discriminator 2
 1226 002e FB68     		ldr	r3, [r7, #12]
 1227 0030 0122     		movs	r2, #1
 1228 0032 83F82420 		strb	r2, [r3, #36]
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Set a temporary handle of the ADC slave associated to the ADC master     */
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1229              		.loc 1 688 3 is_stmt 1 discriminator 2
 1230 0036 484B     		ldr	r3, .L90
 1231 0038 7B61     		str	r3, [r7, #20]
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* On STM32F1 devices, ADC slave regular group must be configured with      */
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion trigger ADC_SOFTWARE_START.                                   */
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: External trigger of ADC slave must be enabled, it is already done  */
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       into function "HAL_ADC_Init()".                                    */
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(!ADC_IS_SOFTWARE_START_REGULAR(&tmphadcSlave))  
 1232              		.loc 1 694 7 discriminator 2
 1233 003a 7B69     		ldr	r3, [r7, #20]
 1234 003c 9B68     		ldr	r3, [r3, #8]
 1235 003e 03F46023 		and	r3, r3, #917504
 1236              		.loc 1 694 5 discriminator 2
 1237 0042 B3F5602F 		cmp	r3, #917504
 1238 0046 0BD0     		beq	.L83
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/cckKL5DZ.s 			page 35


 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1239              		.loc 1 697 5
 1240 0048 FB68     		ldr	r3, [r7, #12]
 1241 004a 9B6A     		ldr	r3, [r3, #40]
 1242 004c 43F02002 		orr	r2, r3, #32
 1243 0050 FB68     		ldr	r3, [r7, #12]
 1244 0052 9A62     		str	r2, [r3, #40]
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1245              		.loc 1 700 5
 1246 0054 FB68     		ldr	r3, [r7, #12]
 1247 0056 0022     		movs	r2, #0
 1248 0058 83F82420 		strb	r2, [r3, #36]
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     return HAL_ERROR;
 1249              		.loc 1 702 12
 1250 005c 0123     		movs	r3, #1
 1251 005e 76E0     		b	.L89
 1252              	.L83:
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Enable the ADC peripherals: master and slave (in case if not already     */
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* enabled previously)                                                      */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
 1253              		.loc 1 707 20
 1254 0060 F868     		ldr	r0, [r7, #12]
 1255 0062 FFF7FEFF 		bl	ADC_Enable
 1256 0066 0346     		mov	r3, r0
 1257 0068 87F84730 		strb	r3, [r7, #71]
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1258              		.loc 1 708 6
 1259 006c 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1260 0070 002B     		cmp	r3, #0
 1261 0072 07D1     		bne	.L84
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(&tmphadcSlave);
 1262              		.loc 1 710 22
 1263 0074 07F11403 		add	r3, r7, #20
 1264 0078 1846     		mov	r0, r3
 1265 007a FFF7FEFF 		bl	ADC_Enable
 1266 007e 0346     		mov	r3, r0
 1267 0080 87F84730 		strb	r3, [r7, #71]
 1268              	.L84:
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Start conversion if all ADCs of multimode are effectively enabled */
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1269              		.loc 1 714 6
 1270 0084 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1271 0088 002B     		cmp	r3, #0
 1272 008a 5AD1     		bne	.L85
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC state (ADC master)                                             */
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
ARM GAS  /tmp/cckKL5DZ.s 			page 36


 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 1273              		.loc 1 719 5
 1274 008c FB68     		ldr	r3, [r7, #12]
 1275 008e 9A6A     		ldr	r2, [r3, #40]
 1276 0090 324B     		ldr	r3, .L90+4
 1277 0092 1340     		ands	r3, r3, r2
 1278 0094 43F48072 		orr	r2, r3, #256
 1279 0098 FB68     		ldr	r3, [r7, #12]
 1280 009a 9A62     		str	r2, [r3, #40]
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_MULTIMODE_SLAVE,
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1281              		.loc 1 725 9
 1282 009c FB68     		ldr	r3, [r7, #12]
 1283 009e 1B68     		ldr	r3, [r3]
 1284 00a0 5B68     		ldr	r3, [r3, #4]
 1285 00a2 03F48063 		and	r3, r3, #1024
 1286              		.loc 1 725 8
 1287 00a6 002B     		cmp	r3, #0
 1288 00a8 07D0     		beq	.L86
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1289              		.loc 1 727 7
 1290 00aa FB68     		ldr	r3, [r7, #12]
 1291 00ac 9B6A     		ldr	r3, [r3, #40]
 1292 00ae 23F44053 		bic	r3, r3, #12288
 1293 00b2 43F48052 		orr	r2, r3, #4096
 1294 00b6 FB68     		ldr	r3, [r7, #12]
 1295 00b8 9A62     		str	r2, [r3, #40]
 1296              	.L86:
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1297              		.loc 1 733 5
 1298 00ba FB68     		ldr	r3, [r7, #12]
 1299 00bc 0022     		movs	r2, #0
 1300 00be 83F82420 		strb	r2, [r3, #36]
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 1301              		.loc 1 736 5
 1302 00c2 FB68     		ldr	r3, [r7, #12]
 1303 00c4 0022     		movs	r2, #0
 1304 00c6 DA62     		str	r2, [r3, #44]
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1305              		.loc 1 740 9
 1306 00c8 FB68     		ldr	r3, [r7, #12]
 1307 00ca 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/cckKL5DZ.s 			page 37


 1308              		.loc 1 740 40
 1309 00cc 244A     		ldr	r2, .L90+8
 1310 00ce 9A62     		str	r2, [r3, #40]
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****        
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1311              		.loc 1 743 9
 1312 00d0 FB68     		ldr	r3, [r7, #12]
 1313 00d2 1B6A     		ldr	r3, [r3, #32]
 1314              		.loc 1 743 44
 1315 00d4 234A     		ldr	r2, .L90+12
 1316 00d6 DA62     		str	r2, [r3, #44]
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set the DMA error callback */
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1317              		.loc 1 746 9
 1318 00d8 FB68     		ldr	r3, [r7, #12]
 1319 00da 1B6A     		ldr	r3, [r3, #32]
 1320              		.loc 1 746 41
 1321 00dc 224A     		ldr	r2, .L90+16
 1322 00de 1A63     		str	r2, [r3, #48]
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
 1323              		.loc 1 754 5
 1324 00e0 FB68     		ldr	r3, [r7, #12]
 1325 00e2 1B68     		ldr	r3, [r3]
 1326 00e4 6FF00202 		mvn	r2, #2
 1327 00e8 1A60     		str	r2, [r3]
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Enable ADC DMA mode of ADC master */
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1328              		.loc 1 757 5
 1329 00ea FB68     		ldr	r3, [r7, #12]
 1330 00ec 1B68     		ldr	r3, [r3]
 1331 00ee 9A68     		ldr	r2, [r3, #8]
 1332 00f0 FB68     		ldr	r3, [r7, #12]
 1333 00f2 1B68     		ldr	r3, [r3]
 1334 00f4 42F48072 		orr	r2, r2, #256
 1335 00f8 9A60     		str	r2, [r3, #8]
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start the DMA channel */
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1336              		.loc 1 760 5
 1337 00fa FB68     		ldr	r3, [r7, #12]
 1338 00fc 186A     		ldr	r0, [r3, #32]
 1339              		.loc 1 760 55
 1340 00fe FB68     		ldr	r3, [r7, #12]
 1341 0100 1B68     		ldr	r3, [r3]
 1342              		.loc 1 760 50
 1343 0102 4C33     		adds	r3, r3, #76
 1344              		.loc 1 760 5
ARM GAS  /tmp/cckKL5DZ.s 			page 38


 1345 0104 1946     		mov	r1, r3
 1346 0106 BA68     		ldr	r2, [r7, #8]
 1347 0108 7B68     		ldr	r3, [r7, #4]
 1348 010a FFF7FEFF 		bl	HAL_DMA_Start_IT
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Start conversion of regular group if software start has been selected. */
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* trigger event.                                                         */
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
 1349              		.loc 1 767 9
 1350 010e FB68     		ldr	r3, [r7, #12]
 1351 0110 1B68     		ldr	r3, [r3]
 1352 0112 9B68     		ldr	r3, [r3, #8]
 1353 0114 03F46023 		and	r3, r3, #917504
 1354              		.loc 1 767 8
 1355 0118 B3F5602F 		cmp	r3, #917504
 1356 011c 08D1     		bne	.L87
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
 1357              		.loc 1 770 7
 1358 011e FB68     		ldr	r3, [r7, #12]
 1359 0120 1B68     		ldr	r3, [r3]
 1360 0122 9A68     		ldr	r2, [r3, #8]
 1361 0124 FB68     		ldr	r3, [r7, #12]
 1362 0126 1B68     		ldr	r3, [r3]
 1363 0128 42F4A002 		orr	r2, r2, #5242880
 1364 012c 9A60     		str	r2, [r3, #8]
 1365 012e 0CE0     		b	.L88
 1366              	.L87:
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
 1367              		.loc 1 775 7
 1368 0130 FB68     		ldr	r3, [r7, #12]
 1369 0132 1B68     		ldr	r3, [r3]
 1370 0134 9A68     		ldr	r2, [r3, #8]
 1371 0136 FB68     		ldr	r3, [r7, #12]
 1372 0138 1B68     		ldr	r3, [r3]
 1373 013a 42F48012 		orr	r2, r2, #1048576
 1374 013e 9A60     		str	r2, [r3, #8]
 1375 0140 03E0     		b	.L88
 1376              	.L85:
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Process unlocked */
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
 1377              		.loc 1 781 5
 1378 0142 FB68     		ldr	r3, [r7, #12]
 1379 0144 0022     		movs	r2, #0
 1380 0146 83F82420 		strb	r2, [r3, #36]
ARM GAS  /tmp/cckKL5DZ.s 			page 39


 1381              	.L88:
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1382              		.loc 1 785 10
 1383 014a 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1384              	.L89:
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1385              		.loc 1 786 1 discriminator 1
 1386 014e 1846     		mov	r0, r3
 1387 0150 4837     		adds	r7, r7, #72
 1388              	.LCFI33:
 1389              		.cfi_def_cfa_offset 8
 1390 0152 BD46     		mov	sp, r7
 1391              	.LCFI34:
 1392              		.cfi_def_cfa_register 13
 1393              		@ sp needed
 1394 0154 80BD     		pop	{r7, pc}
 1395              	.L91:
 1396 0156 00BF     		.align	2
 1397              	.L90:
 1398 0158 00280140 		.word	1073817600
 1399 015c FEFCEFFF 		.word	-1049346
 1400 0160 00000000 		.word	ADC_DMAConvCplt
 1401 0164 00000000 		.word	ADC_DMAHalfConvCplt
 1402 0168 00000000 		.word	ADC_DMAError
 1403              		.cfi_endproc
 1404              	.LFE71:
 1406              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 1407              		.align	1
 1408              		.global	HAL_ADCEx_MultiModeStop_DMA
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1413              	HAL_ADCEx_MultiModeStop_DMA:
 1414              	.LFB72:
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         ADC peripheral.
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel(), ADC must be 
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1415              		.loc 1 802 1
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 64
 1418              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cckKL5DZ.s 			page 40


 1419 0000 80B5     		push	{r7, lr}
 1420              	.LCFI35:
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 90B0     		sub	sp, sp, #64
 1425              	.LCFI36:
 1426              		.cfi_def_cfa_offset 72
 1427 0004 00AF     		add	r7, sp, #0
 1428              	.LCFI37:
 1429              		.cfi_def_cfa_register 7
 1430 0006 7860     		str	r0, [r7, #4]
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1431              		.loc 1 803 21
 1432 0008 0023     		movs	r3, #0
 1433 000a 87F83F30 		strb	r3, [r7, #63]
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave={0};
 1434              		.loc 1 804 21
 1435 000e 07F10C03 		add	r3, r7, #12
 1436 0012 3022     		movs	r2, #48
 1437 0014 0021     		movs	r1, #0
 1438 0016 1846     		mov	r0, r3
 1439 0018 FFF7FEFF 		bl	memset
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1440              		.loc 1 810 3
 1441 001c 7B68     		ldr	r3, [r7, #4]
 1442 001e 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1443 0022 012B     		cmp	r3, #1
 1444 0024 01D1     		bne	.L93
 1445              		.loc 1 810 3 is_stmt 0 discriminator 1
 1446 0026 0223     		movs	r3, #2
 1447 0028 4FE0     		b	.L97
 1448              	.L93:
 1449              		.loc 1 810 3 discriminator 2
 1450 002a 7B68     		ldr	r3, [r7, #4]
 1451 002c 0122     		movs	r2, #1
 1452 002e 83F82420 		strb	r2, [r3, #36]
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Disable ADC master peripheral */
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 1453              		.loc 1 814 20 is_stmt 1 discriminator 2
 1454 0032 7868     		ldr	r0, [r7, #4]
 1455 0034 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1456 0038 0346     		mov	r3, r0
 1457 003a 87F83F30 		strb	r3, [r7, #63]
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(tmp_hal_status == HAL_OK)
 1458              		.loc 1 817 5 discriminator 2
 1459 003e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1460 0042 002B     		cmp	r3, #0
ARM GAS  /tmp/cckKL5DZ.s 			page 41


 1461 0044 3BD1     		bne	.L95
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 1462              		.loc 1 820 5
 1463 0046 234B     		ldr	r3, .L98
 1464 0048 FB60     		str	r3, [r7, #12]
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC slave peripheral */
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(&tmphadcSlave);
 1465              		.loc 1 823 22
 1466 004a 07F10C03 		add	r3, r7, #12
 1467 004e 1846     		mov	r0, r3
 1468 0050 FFF7FEFF 		bl	ADC_ConversionStop_Disable
 1469 0054 0346     		mov	r3, r0
 1470 0056 87F83F30 		strb	r3, [r7, #63]
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if(tmp_hal_status != HAL_OK)
 1471              		.loc 1 826 7
 1472 005a 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1473 005e 002B     		cmp	r3, #0
 1474 0060 0BD0     		beq	.L96
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 1475              		.loc 1 829 7
 1476 0062 7B68     		ldr	r3, [r7, #4]
 1477 0064 9B6A     		ldr	r3, [r3, #40]
 1478 0066 43F01002 		orr	r2, r3, #16
 1479 006a 7B68     		ldr	r3, [r7, #4]
 1480 006c 9A62     		str	r2, [r3, #40]
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Process unlocked */
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1481              		.loc 1 832 7
 1482 006e 7B68     		ldr	r3, [r7, #4]
 1483 0070 0022     		movs	r2, #0
 1484 0072 83F82420 		strb	r2, [r3, #36]
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       return HAL_ERROR;
 1485              		.loc 1 834 14
 1486 0076 0123     		movs	r3, #1
 1487 0078 27E0     		b	.L97
 1488              	.L96:
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable ADC DMA mode */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 1489              		.loc 1 838 5
 1490 007a 7B68     		ldr	r3, [r7, #4]
 1491 007c 1B68     		ldr	r3, [r3]
 1492 007e 9A68     		ldr	r2, [r3, #8]
 1493 0080 7B68     		ldr	r3, [r7, #4]
 1494 0082 1B68     		ldr	r3, [r3]
 1495 0084 22F48072 		bic	r2, r2, #256
 1496 0088 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/cckKL5DZ.s 			page 42


 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Reset configuration of ADC DMA continuous request for dual mode */
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR1, ADC_CR1_DUALMOD);
 1497              		.loc 1 841 5
 1498 008a 7B68     		ldr	r3, [r7, #4]
 1499 008c 1B68     		ldr	r3, [r3]
 1500 008e 5A68     		ldr	r2, [r3, #4]
 1501 0090 7B68     		ldr	r3, [r7, #4]
 1502 0092 1B68     		ldr	r3, [r3]
 1503 0094 22F47022 		bic	r2, r2, #983040
 1504 0098 5A60     		str	r2, [r3, #4]
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 1505              		.loc 1 845 22
 1506 009a 7B68     		ldr	r3, [r7, #4]
 1507 009c 1B6A     		ldr	r3, [r3, #32]
 1508 009e 1846     		mov	r0, r3
 1509 00a0 FFF7FEFF 		bl	HAL_DMA_Abort
 1510 00a4 0346     		mov	r3, r0
 1511 00a6 87F83F30 		strb	r3, [r7, #63]
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Change ADC state (ADC master) */
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 1512              		.loc 1 848 5
 1513 00aa 7B68     		ldr	r3, [r7, #4]
 1514 00ac 9B6A     		ldr	r3, [r3, #40]
 1515 00ae 23F48853 		bic	r3, r3, #4352
 1516 00b2 23F00103 		bic	r3, r3, #1
 1517 00b6 43F00102 		orr	r2, r3, #1
 1518 00ba 7B68     		ldr	r3, [r7, #4]
 1519 00bc 9A62     		str	r2, [r3, #40]
 1520              	.L95:
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1521              		.loc 1 854 3
 1522 00be 7B68     		ldr	r3, [r7, #4]
 1523 00c0 0022     		movs	r2, #0
 1524 00c2 83F82420 		strb	r2, [r3, #36]
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 1525              		.loc 1 857 10
 1526 00c6 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1527              	.L97:
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1528              		.loc 1 858 1 discriminator 1
 1529 00ca 1846     		mov	r0, r3
 1530 00cc 4037     		adds	r7, r7, #64
 1531              	.LCFI38:
 1532              		.cfi_def_cfa_offset 8
 1533 00ce BD46     		mov	sp, r7
ARM GAS  /tmp/cckKL5DZ.s 			page 43


 1534              	.LCFI39:
 1535              		.cfi_def_cfa_register 13
 1536              		@ sp needed
 1537 00d0 80BD     		pop	{r7, pc}
 1538              	.L99:
 1539 00d2 00BF     		.align	2
 1540              	.L98:
 1541 00d4 00280140 		.word	1073817600
 1542              		.cfi_endproc
 1543              	.LFE72:
 1545              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1546              		.align	1
 1547              		.global	HAL_ADCEx_InjectedGetValue
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1552              	HAL_ADCEx_InjectedGetValue:
 1553              	.LFB73:
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #endif /* defined STM32F103x6 || defined STM32F103xB || defined STM32F105xC || defined STM32F107xC 
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            to flag JEOC.
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1554              		.loc 1 890 1
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 16
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558              		@ link register save eliminated.
 1559 0000 80B4     		push	{r7}
 1560              	.LCFI40:
ARM GAS  /tmp/cckKL5DZ.s 			page 44


 1561              		.cfi_def_cfa_offset 4
 1562              		.cfi_offset 7, -4
 1563 0002 85B0     		sub	sp, sp, #20
 1564              	.LCFI41:
 1565              		.cfi_def_cfa_offset 24
 1566 0004 00AF     		add	r7, sp, #0
 1567              	.LCFI42:
 1568              		.cfi_def_cfa_register 7
 1569 0006 7860     		str	r0, [r7, #4]
 1570 0008 3960     		str	r1, [r7]
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
 1571              		.loc 1 891 12
 1572 000a 0023     		movs	r3, #0
 1573 000c FB60     		str	r3, [r7, #12]
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   switch(InjectedRank)
 1574              		.loc 1 898 3
 1575 000e 3B68     		ldr	r3, [r7]
 1576 0010 042B     		cmp	r3, #4
 1577 0012 09D0     		beq	.L101
 1578 0014 3B68     		ldr	r3, [r7]
 1579 0016 042B     		cmp	r3, #4
 1580 0018 15D8     		bhi	.L102
 1581 001a 3B68     		ldr	r3, [r7]
 1582 001c 022B     		cmp	r3, #2
 1583 001e 0DD0     		beq	.L103
 1584 0020 3B68     		ldr	r3, [r7]
 1585 0022 032B     		cmp	r3, #3
 1586 0024 05D0     		beq	.L104
 1587 0026 0EE0     		b	.L102
 1588              	.L101:
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {  
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 1589              		.loc 1 901 21
 1590 0028 7B68     		ldr	r3, [r7, #4]
 1591 002a 1B68     		ldr	r3, [r3]
 1592              		.loc 1 901 15
 1593 002c 9B6C     		ldr	r3, [r3, #72]
 1594 002e FB60     		str	r3, [r7, #12]
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1595              		.loc 1 902 7
 1596 0030 0EE0     		b	.L105
 1597              	.L104:
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 1598              		.loc 1 904 21
 1599 0032 7B68     		ldr	r3, [r7, #4]
 1600 0034 1B68     		ldr	r3, [r3]
 1601              		.loc 1 904 15
 1602 0036 5B6C     		ldr	r3, [r3, #68]
 1603 0038 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cckKL5DZ.s 			page 45


 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1604              		.loc 1 905 7
 1605 003a 09E0     		b	.L105
 1606              	.L103:
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 1607              		.loc 1 907 21
 1608 003c 7B68     		ldr	r3, [r7, #4]
 1609 003e 1B68     		ldr	r3, [r3]
 1610              		.loc 1 907 15
 1611 0040 1B6C     		ldr	r3, [r3, #64]
 1612 0042 FB60     		str	r3, [r7, #12]
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1613              		.loc 1 908 7
 1614 0044 04E0     		b	.L105
 1615              	.L102:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     default:
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1616              		.loc 1 911 21
 1617 0046 7B68     		ldr	r3, [r7, #4]
 1618 0048 1B68     		ldr	r3, [r3]
 1619              		.loc 1 911 15
 1620 004a DB6B     		ldr	r3, [r3, #60]
 1621 004c FB60     		str	r3, [r7, #12]
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 1622              		.loc 1 912 7
 1623 004e 00BF     		nop
 1624              	.L105:
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_jdr;
 1625              		.loc 1 916 10
 1626 0050 FB68     		ldr	r3, [r7, #12]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1627              		.loc 1 917 1
 1628 0052 1846     		mov	r0, r3
 1629 0054 1437     		adds	r7, r7, #20
 1630              	.LCFI43:
 1631              		.cfi_def_cfa_offset 4
 1632 0056 BD46     		mov	sp, r7
 1633              	.LCFI44:
 1634              		.cfi_def_cfa_register 13
 1635              		@ sp needed
 1636 0058 80BC     		pop	{r7}
 1637              	.LCFI45:
 1638              		.cfi_restore 7
 1639              		.cfi_def_cfa_offset 0
 1640 005a 7047     		bx	lr
 1641              		.cfi_endproc
 1642              	.LFE73:
 1644              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 1645              		.align	1
 1646              		.global	HAL_ADCEx_MultiModeGetValue
 1647              		.syntax unified
 1648              		.thumb
ARM GAS  /tmp/cckKL5DZ.s 			page 46


 1649              		.thumb_func
 1651              	HAL_ADCEx_MultiModeGetValue:
 1652              	.LFB74:
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105xC) || defined (STM32F107xC
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Returns the last ADC Master&Slave regular conversions results data
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         in the selected multi mode.
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval The converted data value.
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1653              		.loc 1 927 1
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 16
 1656              		@ frame_needed = 1, uses_anonymous_args = 0
 1657              		@ link register save eliminated.
 1658 0000 80B4     		push	{r7}
 1659              	.LCFI46:
 1660              		.cfi_def_cfa_offset 4
 1661              		.cfi_offset 7, -4
 1662 0002 85B0     		sub	sp, sp, #20
 1663              	.LCFI47:
 1664              		.cfi_def_cfa_offset 24
 1665 0004 00AF     		add	r7, sp, #0
 1666              	.LCFI48:
 1667              		.cfi_def_cfa_register 7
 1668 0006 7860     		str	r0, [r7, #4]
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   uint32_t tmpDR = 0U;
 1669              		.loc 1 928 12
 1670 0008 0023     		movs	r3, #0
 1671 000a FB60     		str	r3, [r7, #12]
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       cleared by hardware when reading register DR.                      */
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* On STM32F1 devices, ADC1 data register DR contains ADC2 conversions      */
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* only if ADC1 DMA mode is enabled.                                        */
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   tmpDR = hadc->Instance->DR;
 1672              		.loc 1 941 15
 1673 000c 7B68     		ldr	r3, [r7, #4]
 1674 000e 1B68     		ldr	r3, [r3]
 1675              		.loc 1 941 9
 1676 0010 DB6C     		ldr	r3, [r3, #76]
 1677 0012 FB60     		str	r3, [r7, #12]
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(ADC1->CR2, ADC_CR2_DMA))
 1678              		.loc 1 943 7
 1679 0014 084B     		ldr	r3, .L110
 1680 0016 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/cckKL5DZ.s 			page 47


 1681 0018 03F48073 		and	r3, r3, #256
 1682              		.loc 1 943 6
 1683 001c 002B     		cmp	r3, #0
 1684 001e 05D1     		bne	.L108
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmpDR |= (ADC2->DR << 16U);
 1685              		.loc 1 945 19
 1686 0020 064B     		ldr	r3, .L110+4
 1687 0022 DB6C     		ldr	r3, [r3, #76]
 1688              		.loc 1 945 24
 1689 0024 1B04     		lsls	r3, r3, #16
 1690              		.loc 1 945 11
 1691 0026 FA68     		ldr	r2, [r7, #12]
 1692 0028 1343     		orrs	r3, r3, r2
 1693 002a FB60     		str	r3, [r7, #12]
 1694              	.L108:
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmpDR;
 1695              		.loc 1 949 10
 1696 002c FB68     		ldr	r3, [r7, #12]
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1697              		.loc 1 950 1
 1698 002e 1846     		mov	r0, r3
 1699 0030 1437     		adds	r7, r7, #20
 1700              	.LCFI49:
 1701              		.cfi_def_cfa_offset 4
 1702 0032 BD46     		mov	sp, r7
 1703              	.LCFI50:
 1704              		.cfi_def_cfa_register 13
 1705              		@ sp needed
 1706 0034 80BC     		pop	{r7}
 1707              	.LCFI51:
 1708              		.cfi_restore 7
 1709              		.cfi_def_cfa_offset 0
 1710 0036 7047     		bx	lr
 1711              	.L111:
 1712              		.align	2
 1713              	.L110:
 1714 0038 00240140 		.word	1073816576
 1715 003c 00280140 		.word	1073817600
 1716              		.cfi_endproc
 1717              	.LFE74:
 1719              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1720              		.align	1
 1721              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1722              		.syntax unified
 1723              		.thumb
 1724              		.thumb_func
 1726              	HAL_ADCEx_InjectedConvCpltCallback:
 1727              	.LFB75:
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #endif /* defined STM32F103x6 || defined STM32F103xB || defined STM32F105xC || defined STM32F107xC 
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
ARM GAS  /tmp/cckKL5DZ.s 			page 48


 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1728              		.loc 1 959 1
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 8
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
 1733 0000 80B4     		push	{r7}
 1734              	.LCFI52:
 1735              		.cfi_def_cfa_offset 4
 1736              		.cfi_offset 7, -4
 1737 0002 83B0     		sub	sp, sp, #12
 1738              	.LCFI53:
 1739              		.cfi_def_cfa_offset 16
 1740 0004 00AF     		add	r7, sp, #0
 1741              	.LCFI54:
 1742              		.cfi_def_cfa_register 7
 1743 0006 7860     		str	r0, [r7, #4]
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   UNUSED(hadc);
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 1744              		.loc 1 965 1
 1745 0008 00BF     		nop
 1746 000a 0C37     		adds	r7, r7, #12
 1747              	.LCFI55:
 1748              		.cfi_def_cfa_offset 4
 1749 000c BD46     		mov	sp, r7
 1750              	.LCFI56:
 1751              		.cfi_def_cfa_register 13
 1752              		@ sp needed
 1753 000e 80BC     		pop	{r7}
 1754              	.LCFI57:
 1755              		.cfi_restore 7
 1756              		.cfi_def_cfa_offset 0
 1757 0010 7047     		bx	lr
 1758              		.cfi_endproc
 1759              	.LFE75:
 1761              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1762              		.align	1
 1763              		.global	HAL_ADCEx_InjectedConfigChannel
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1768              	HAL_ADCEx_InjectedConfigChannel:
 1769              	.LFB76:
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @}
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 Extended Peripheral Control functions
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief    Extended Peripheral Control functions
ARM GAS  /tmp/cckKL5DZ.s 			page 49


 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @verbatim   
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****  ===============================================================================  
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Configure channels on injected group
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (+) Configure multimode
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** @endverbatim
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @{
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         linked to the injected group.
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         injected group.
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval None
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 1770              		.loc 1 1001 1
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 16
 1773              		@ frame_needed = 1, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
 1775 0000 90B4     		push	{r4, r7}
 1776              	.LCFI58:
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 4, -8
 1779              		.cfi_offset 7, -4
 1780 0002 84B0     		sub	sp, sp, #16
 1781              	.LCFI59:
 1782              		.cfi_def_cfa_offset 24
 1783 0004 00AF     		add	r7, sp, #0
 1784              	.LCFI60:
 1785              		.cfi_def_cfa_register 7
 1786 0006 7860     		str	r0, [r7, #4]
 1787 0008 3960     		str	r1, [r7]
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1788              		.loc 1 1002 21
 1789 000a 0023     		movs	r3, #0
 1790 000c FB73     		strb	r3, [r7, #15]
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 1791              		.loc 1 1003 17
 1792 000e 0023     		movs	r3, #0
 1793 0010 BB60     		str	r3, [r7, #8]
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/cckKL5DZ.s 			page 50


1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(sConfigInjected->InjectedOffset));
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1794              		.loc 1 1021 3
 1795 0012 7B68     		ldr	r3, [r7, #4]
 1796 0014 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 1797 0018 012B     		cmp	r3, #1
 1798 001a 01D1     		bne	.L114
 1799              		.loc 1 1021 3 is_stmt 0 discriminator 1
 1800 001c 0223     		movs	r3, #2
 1801 001e 7DE1     		b	.L115
 1802              	.L114:
 1803              		.loc 1 1021 3 discriminator 2
 1804 0020 7B68     		ldr	r3, [r7, #4]
 1805 0022 0122     		movs	r2, #1
 1806 0024 83F82420 		strb	r2, [r3, #36]
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1)                  */
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*   parameter "InjectedNbrOfConversion".                                   */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 1807              		.loc 1 1032 17 is_stmt 1 discriminator 2
 1808 0028 7B68     		ldr	r3, [r7, #4]
 1809 002a 9B68     		ldr	r3, [r3, #8]
 1810              		.loc 1 1032 6 discriminator 2
 1811 002c 002B     		cmp	r3, #0
 1812 002e 19D1     		bne	.L116
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
 1813              		.loc 1 1034 24
 1814 0030 3B68     		ldr	r3, [r7]
 1815 0032 5B68     		ldr	r3, [r3, #4]
 1816              		.loc 1 1034 8
 1817 0034 012B     		cmp	r3, #1
 1818 0036 0CD1     		bne	.L117
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                             ,
ARM GAS  /tmp/cckKL5DZ.s 			page 51


 1819              		.loc 1 1037 7
 1820 0038 7B68     		ldr	r3, [r7, #4]
 1821 003a 1B68     		ldr	r3, [r3]
 1822 003c 9B6B     		ldr	r3, [r3, #56]
 1823 003e 9B0D     		lsrs	r3, r3, #22
 1824 0040 9B05     		lsls	r3, r3, #22
 1825 0042 3A68     		ldr	r2, [r7]
 1826 0044 1268     		ldr	r2, [r2]
 1827 0046 D103     		lsls	r1, r2, #15
 1828 0048 7A68     		ldr	r2, [r7, #4]
 1829 004a 1268     		ldr	r2, [r2]
 1830 004c 0B43     		orrs	r3, r3, r1
 1831 004e 9363     		str	r3, [r2, #56]
 1832 0050 4FE0     		b	.L118
 1833              	.L117:
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4 |
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3 |
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2 |
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1                                    ,
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   ADC_INJECTED_RANK_1,
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   0x01U));
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1834              		.loc 1 1052 7
 1835 0052 7B68     		ldr	r3, [r7, #4]
 1836 0054 9B6A     		ldr	r3, [r3, #40]
 1837 0056 43F02002 		orr	r2, r3, #32
 1838 005a 7B68     		ldr	r3, [r7, #4]
 1839 005c 9A62     		str	r2, [r3, #40]
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 1840              		.loc 1 1054 22
 1841 005e 0123     		movs	r3, #1
 1842 0060 FB73     		strb	r3, [r7, #15]
 1843 0062 46E0     		b	.L118
 1844              	.L116:
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
 1845              		.loc 1 1062 24
 1846 0064 3B68     		ldr	r3, [r7]
 1847 0066 5A68     		ldr	r2, [r3, #4]
 1848              		.loc 1 1062 57
 1849 0068 3B68     		ldr	r3, [r7]
 1850 006a 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/cckKL5DZ.s 			page 52


 1851              		.loc 1 1062 8
 1852 006c 9A42     		cmp	r2, r3
 1853 006e 2AD8     		bhi	.L119
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                         ,
 1854              		.loc 1 1066 7
 1855 0070 7B68     		ldr	r3, [r7, #4]
 1856 0072 1B68     		ldr	r3, [r3]
 1857 0074 996B     		ldr	r1, [r3, #56]
 1858 0076 3B68     		ldr	r3, [r7]
 1859 0078 5A68     		ldr	r2, [r3, #4]
 1860 007a 3B68     		ldr	r3, [r7]
 1861 007c 1B69     		ldr	r3, [r3, #16]
 1862 007e D21A     		subs	r2, r2, r3
 1863 0080 1346     		mov	r3, r2
 1864 0082 9B00     		lsls	r3, r3, #2
 1865 0084 1344     		add	r3, r3, r2
 1866 0086 0F33     		adds	r3, r3, #15
 1867 0088 1F22     		movs	r2, #31
 1868 008a 02FA03F3 		lsl	r3, r2, r3
 1869 008e 43F44013 		orr	r3, r3, #3145728
 1870 0092 DB43     		mvns	r3, r3
 1871 0094 1940     		ands	r1, r1, r3
 1872 0096 3B68     		ldr	r3, [r7]
 1873 0098 1B69     		ldr	r3, [r3, #16]
 1874 009a 013B     		subs	r3, r3, #1
 1875 009c 1805     		lsls	r0, r3, #20
 1876 009e 3B68     		ldr	r3, [r7]
 1877 00a0 1C68     		ldr	r4, [r3]
 1878 00a2 3B68     		ldr	r3, [r7]
 1879 00a4 5A68     		ldr	r2, [r3, #4]
 1880 00a6 3B68     		ldr	r3, [r7]
 1881 00a8 1B69     		ldr	r3, [r3, #16]
 1882 00aa D21A     		subs	r2, r2, r3
 1883 00ac 1346     		mov	r3, r2
 1884 00ae 9B00     		lsls	r3, r3, #2
 1885 00b0 1344     		add	r3, r3, r2
 1886 00b2 0F33     		adds	r3, r3, #15
 1887 00b4 04FA03F3 		lsl	r3, r4, r3
 1888 00b8 40EA0302 		orr	r2, r0, r3
 1889 00bc 7B68     		ldr	r3, [r7, #4]
 1890 00be 1B68     		ldr	r3, [r3]
 1891 00c0 0A43     		orrs	r2, r2, r1
 1892 00c2 9A63     		str	r2, [r3, #56]
 1893 00c4 15E0     		b	.L118
 1894              	.L119:
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)   ,
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion) |
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
ARM GAS  /tmp/cckKL5DZ.s 			page 53


1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion)    );
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                       ,
 1895              		.loc 1 1081 7
 1896 00c6 7B68     		ldr	r3, [r7, #4]
 1897 00c8 1B68     		ldr	r3, [r3]
 1898 00ca 996B     		ldr	r1, [r3, #56]
 1899 00cc 3B68     		ldr	r3, [r7]
 1900 00ce 5A68     		ldr	r2, [r3, #4]
 1901 00d0 3B68     		ldr	r3, [r7]
 1902 00d2 1B69     		ldr	r3, [r3, #16]
 1903 00d4 D21A     		subs	r2, r2, r3
 1904 00d6 1346     		mov	r3, r2
 1905 00d8 9B00     		lsls	r3, r3, #2
 1906 00da 1344     		add	r3, r3, r2
 1907 00dc 0F33     		adds	r3, r3, #15
 1908 00de 1F22     		movs	r2, #31
 1909 00e0 02FA03F3 		lsl	r3, r2, r3
 1910 00e4 43F44013 		orr	r3, r3, #3145728
 1911 00e8 DA43     		mvns	r2, r3
 1912 00ea 7B68     		ldr	r3, [r7, #4]
 1913 00ec 1B68     		ldr	r3, [r3]
 1914 00ee 0A40     		ands	r2, r2, r1
 1915 00f0 9A63     		str	r2, [r3, #56]
 1916              	.L118:
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                               |
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedRank,         
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                                   sConfigInjected->InjectedNbrOfConversion) ,
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  0x00000000U);
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   } 
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - external trigger to start conversion                                  */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update not conditioned to ADC state:                          */
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, caution to not launch an unwanted  */
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*       conversion while modifying register CR2 by writing 1 to bit ADON.  */
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 1917              		.loc 1 1101 7
 1918 00f2 7B68     		ldr	r3, [r7, #4]
 1919 00f4 1B68     		ldr	r3, [r3]
 1920 00f6 9B68     		ldr	r3, [r3, #8]
 1921 00f8 03F00103 		and	r3, r3, #1
 1922              		.loc 1 1101 6
 1923 00fc 012B     		cmp	r3, #1
 1924 00fe 0CD0     		beq	.L120
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {    
ARM GAS  /tmp/cckKL5DZ.s 			page 54


1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                                           ,
 1925              		.loc 1 1103 5
 1926 0100 7B68     		ldr	r3, [r7, #4]
 1927 0102 1B68     		ldr	r3, [r3]
 1928 0104 9B68     		ldr	r3, [r3, #8]
 1929 0106 23F4E043 		bic	r3, r3, #28672
 1930 010a 23F00103 		bic	r3, r3, #1
 1931 010e 3A68     		ldr	r2, [r7]
 1932 0110 9169     		ldr	r1, [r2, #24]
 1933 0112 7A68     		ldr	r2, [r7, #4]
 1934 0114 1268     		ldr	r2, [r2]
 1935 0116 0B43     		orrs	r3, r3, r1
 1936 0118 9360     		str	r3, [r2, #8]
 1937              	.L120:
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR2_ADON                                                  ,
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CFGR_JEXTSEL(hadc, sConfigInjected->ExternalTrigInjecConv) );
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
 1938              		.loc 1 1116 24
 1939 011a 3B68     		ldr	r3, [r7]
 1940 011c 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 1941              		.loc 1 1116 8
 1942 011e 012B     		cmp	r3, #1
 1943 0120 15D1     		bne	.L121
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 1944              		.loc 1 1118 26
 1945 0122 3B68     		ldr	r3, [r7]
 1946 0124 9B69     		ldr	r3, [r3, #24]
 1947              		.loc 1 1118 10
 1948 0126 B3F5E04F 		cmp	r3, #28672
 1949 012a 08D1     		bne	.L122
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
 1950              		.loc 1 1120 9
 1951 012c 7B68     		ldr	r3, [r7, #4]
 1952 012e 1B68     		ldr	r3, [r3]
 1953 0130 5A68     		ldr	r2, [r3, #4]
 1954 0132 7B68     		ldr	r3, [r7, #4]
 1955 0134 1B68     		ldr	r3, [r3]
 1956 0136 42F48062 		orr	r2, r2, #1024
 1957 013a 5A60     		str	r2, [r3, #4]
 1958 013c 07E0     		b	.L121
 1959              	.L122:
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
ARM GAS  /tmp/cckKL5DZ.s 			page 55


1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1960              		.loc 1 1125 9
 1961 013e 7B68     		ldr	r3, [r7, #4]
 1962 0140 9B6A     		ldr	r3, [r3, #40]
 1963 0142 43F02002 		orr	r2, r3, #32
 1964 0146 7B68     		ldr	r3, [r7, #4]
 1965 0148 9A62     		str	r2, [r3, #40]
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 1966              		.loc 1 1127 24
 1967 014a 0123     		movs	r3, #1
 1968 014c FB73     		strb	r3, [r7, #15]
 1969              	.L121:
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* disabled.                                                              */  
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 1970              		.loc 1 1133 24
 1971 014e 3B68     		ldr	r3, [r7]
 1972 0150 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1973              		.loc 1 1133 8
 1974 0152 012B     		cmp	r3, #1
 1975 0154 14D1     		bne	.L123
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
 1976              		.loc 1 1135 26
 1977 0156 3B68     		ldr	r3, [r7]
 1978 0158 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 1979              		.loc 1 1135 10
 1980 015a 002B     		cmp	r3, #0
 1981 015c 08D1     		bne	.L124
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
 1982              		.loc 1 1137 9
 1983 015e 7B68     		ldr	r3, [r7, #4]
 1984 0160 1B68     		ldr	r3, [r3]
 1985 0162 5A68     		ldr	r2, [r3, #4]
 1986 0164 7B68     		ldr	r3, [r7, #4]
 1987 0166 1B68     		ldr	r3, [r3]
 1988 0168 42F48052 		orr	r2, r2, #4096
 1989 016c 5A60     		str	r2, [r3, #4]
 1990 016e 07E0     		b	.L123
 1991              	.L124:
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       } 
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       else
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1992              		.loc 1 1142 9
 1993 0170 7B68     		ldr	r3, [r7, #4]
 1994 0172 9B6A     		ldr	r3, [r3, #40]
 1995 0174 43F02002 		orr	r2, r3, #32
 1996 0178 7B68     		ldr	r3, [r7, #4]
 1997 017a 9A62     		str	r2, [r3, #40]
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
ARM GAS  /tmp/cckKL5DZ.s 			page 56


1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 1998              		.loc 1 1144 24
 1999 017c 0123     		movs	r3, #1
 2000 017e FB73     		strb	r3, [r7, #15]
 2001              	.L123:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* InjectedChannel sampling time configuration */
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* For channels 10 to 17 */
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
 2002              		.loc 1 1151 22
 2003 0180 3B68     		ldr	r3, [r7]
 2004 0182 1B68     		ldr	r3, [r3]
 2005              		.loc 1 1151 6
 2006 0184 092B     		cmp	r3, #9
 2007 0186 1CD9     		bls	.L125
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1                                                             ,
 2008              		.loc 1 1153 5
 2009 0188 7B68     		ldr	r3, [r7, #4]
 2010 018a 1B68     		ldr	r3, [r3]
 2011 018c D968     		ldr	r1, [r3, #12]
 2012 018e 3B68     		ldr	r3, [r7]
 2013 0190 1A68     		ldr	r2, [r3]
 2014 0192 1346     		mov	r3, r2
 2015 0194 5B00     		lsls	r3, r3, #1
 2016 0196 1344     		add	r3, r3, r2
 2017 0198 1E3B     		subs	r3, r3, #30
 2018 019a 0722     		movs	r2, #7
 2019 019c 02FA03F3 		lsl	r3, r2, r3
 2020 01a0 DB43     		mvns	r3, r3
 2021 01a2 1940     		ands	r1, r1, r3
 2022 01a4 3B68     		ldr	r3, [r7]
 2023 01a6 9868     		ldr	r0, [r3, #8]
 2024 01a8 3B68     		ldr	r3, [r7]
 2025 01aa 1A68     		ldr	r2, [r3]
 2026 01ac 1346     		mov	r3, r2
 2027 01ae 5B00     		lsls	r3, r3, #1
 2028 01b0 1344     		add	r3, r3, r2
 2029 01b2 1E3B     		subs	r3, r3, #30
 2030 01b4 00FA03F2 		lsl	r2, r0, r3
 2031 01b8 7B68     		ldr	r3, [r7, #4]
 2032 01ba 1B68     		ldr	r3, [r3]
 2033 01bc 0A43     		orrs	r2, r2, r1
 2034 01be DA60     		str	r2, [r3, #12]
 2035 01c0 19E0     		b	.L126
 2036              	.L125:
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel)                      ,
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else /* For channels 0 to 9 */
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2                                                             ,
 2037              		.loc 1 1159 5
 2038 01c2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cckKL5DZ.s 			page 57


 2039 01c4 1B68     		ldr	r3, [r3]
 2040 01c6 1969     		ldr	r1, [r3, #16]
 2041 01c8 3B68     		ldr	r3, [r7]
 2042 01ca 1A68     		ldr	r2, [r3]
 2043 01cc 1346     		mov	r3, r2
 2044 01ce 5B00     		lsls	r3, r3, #1
 2045 01d0 1344     		add	r3, r3, r2
 2046 01d2 0722     		movs	r2, #7
 2047 01d4 02FA03F3 		lsl	r3, r2, r3
 2048 01d8 DB43     		mvns	r3, r3
 2049 01da 1940     		ands	r1, r1, r3
 2050 01dc 3B68     		ldr	r3, [r7]
 2051 01de 9868     		ldr	r0, [r3, #8]
 2052 01e0 3B68     		ldr	r3, [r7]
 2053 01e2 1A68     		ldr	r2, [r3]
 2054 01e4 1346     		mov	r3, r2
 2055 01e6 5B00     		lsls	r3, r3, #1
 2056 01e8 1344     		add	r3, r3, r2
 2057 01ea 00FA03F2 		lsl	r2, r0, r3
 2058 01ee 7B68     		ldr	r3, [r7, #4]
 2059 01f0 1B68     		ldr	r3, [r3]
 2060 01f2 0A43     		orrs	r2, r2, r1
 2061 01f4 1A61     		str	r2, [r3, #16]
 2062              	.L126:
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel)                       ,
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If ADC1 InjectedChannel_16 or InjectedChannel_17 is selected, enable Temperature sensor  */
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 2063              		.loc 1 1166 23
 2064 01f6 3B68     		ldr	r3, [r7]
 2065 01f8 1B68     		ldr	r3, [r3]
 2066              		.loc 1 1166 6
 2067 01fa 102B     		cmp	r3, #16
 2068 01fc 03D0     		beq	.L127
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 2069              		.loc 1 1167 23 discriminator 1
 2070 01fe 3B68     		ldr	r3, [r7]
 2071 0200 1B68     		ldr	r3, [r3]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 2072              		.loc 1 1166 68 discriminator 1
 2073 0202 112B     		cmp	r3, #17
 2074 0204 07D1     		bne	.L128
 2075              	.L127:
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
 2076              		.loc 1 1169 5
 2077 0206 7B68     		ldr	r3, [r7, #4]
 2078 0208 1B68     		ldr	r3, [r3]
 2079 020a 9A68     		ldr	r2, [r3, #8]
 2080 020c 7B68     		ldr	r3, [r7, #4]
 2081 020e 1B68     		ldr	r3, [r3]
 2082 0210 42F40002 		orr	r2, r2, #8388608
 2083 0214 9A60     		str	r2, [r3, #8]
 2084              	.L128:
ARM GAS  /tmp/cckKL5DZ.s 			page 58


1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
 2085              		.loc 1 1174 25
 2086 0216 3B68     		ldr	r3, [r7]
 2087 0218 5B68     		ldr	r3, [r3, #4]
 2088              		.loc 1 1174 3
 2089 021a 032B     		cmp	r3, #3
 2090 021c 22D0     		beq	.L129
 2091 021e 032B     		cmp	r3, #3
 2092 0220 2ED8     		bhi	.L130
 2093 0222 012B     		cmp	r3, #1
 2094 0224 02D0     		beq	.L131
 2095 0226 022B     		cmp	r3, #2
 2096 0228 0ED0     		beq	.L132
 2097 022a 29E0     		b	.L130
 2098              	.L131:
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 1:
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
 2099              		.loc 1 1178 7
 2100 022c 7B68     		ldr	r3, [r7, #4]
 2101 022e 1B68     		ldr	r3, [r3]
 2102 0230 5B69     		ldr	r3, [r3, #20]
 2103 0232 23F47F63 		bic	r3, r3, #4080
 2104 0236 23F00F03 		bic	r3, r3, #15
 2105 023a 3A68     		ldr	r2, [r7]
 2106 023c D168     		ldr	r1, [r2, #12]
 2107 023e 7A68     		ldr	r2, [r7, #4]
 2108 0240 1268     		ldr	r2, [r2]
 2109 0242 0B43     		orrs	r3, r3, r1
 2110 0244 5361     		str	r3, [r2, #20]
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2111              		.loc 1 1181 7
 2112 0246 29E0     		b	.L133
 2113              	.L132:
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 2:
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
 2114              		.loc 1 1184 7
 2115 0248 7B68     		ldr	r3, [r7, #4]
 2116 024a 1B68     		ldr	r3, [r3]
 2117 024c 9B69     		ldr	r3, [r3, #24]
 2118 024e 23F47F63 		bic	r3, r3, #4080
 2119 0252 23F00F03 		bic	r3, r3, #15
 2120 0256 3A68     		ldr	r2, [r7]
 2121 0258 D168     		ldr	r1, [r2, #12]
 2122 025a 7A68     		ldr	r2, [r7, #4]
 2123 025c 1268     		ldr	r2, [r2]
 2124 025e 0B43     		orrs	r3, r3, r1
 2125 0260 9361     		str	r3, [r2, #24]
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
ARM GAS  /tmp/cckKL5DZ.s 			page 59


1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2126              		.loc 1 1187 7
 2127 0262 1BE0     		b	.L133
 2128              	.L129:
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 3:
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
 2129              		.loc 1 1190 7
 2130 0264 7B68     		ldr	r3, [r7, #4]
 2131 0266 1B68     		ldr	r3, [r3]
 2132 0268 DB69     		ldr	r3, [r3, #28]
 2133 026a 23F47F63 		bic	r3, r3, #4080
 2134 026e 23F00F03 		bic	r3, r3, #15
 2135 0272 3A68     		ldr	r2, [r7]
 2136 0274 D168     		ldr	r1, [r2, #12]
 2137 0276 7A68     		ldr	r2, [r7, #4]
 2138 0278 1268     		ldr	r2, [r2]
 2139 027a 0B43     		orrs	r3, r3, r1
 2140 027c D361     		str	r3, [r2, #28]
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2141              		.loc 1 1193 7
 2142 027e 0DE0     		b	.L133
 2143              	.L130:
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     case 4:
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     default:
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
 2144              		.loc 1 1196 7
 2145 0280 7B68     		ldr	r3, [r7, #4]
 2146 0282 1B68     		ldr	r3, [r3]
 2147 0284 1B6A     		ldr	r3, [r3, #32]
 2148 0286 23F47F63 		bic	r3, r3, #4080
 2149 028a 23F00F03 		bic	r3, r3, #15
 2150 028e 3A68     		ldr	r2, [r7]
 2151 0290 D168     		ldr	r1, [r2, #12]
 2152 0292 7A68     		ldr	r2, [r7, #4]
 2153 0294 1268     		ldr	r2, [r2]
 2154 0296 0B43     		orrs	r3, r3, r1
 2155 0298 1362     		str	r3, [r2, #32]
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       break;
 2156              		.loc 1 1199 7
 2157 029a 00BF     		nop
 2158              	.L133:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
 2159              		.loc 1 1204 23
 2160 029c 3B68     		ldr	r3, [r7]
 2161 029e 1B68     		ldr	r3, [r3]
 2162              		.loc 1 1204 6
 2163 02a0 102B     		cmp	r3, #16
ARM GAS  /tmp/cckKL5DZ.s 			page 60


 2164 02a2 03D0     		beq	.L134
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 2165              		.loc 1 1205 23 discriminator 1
 2166 02a4 3B68     		ldr	r3, [r7]
 2167 02a6 1B68     		ldr	r3, [r3]
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
 2168              		.loc 1 1204 68 discriminator 1
 2169 02a8 112B     		cmp	r3, #17
 2170 02aa 32D1     		bne	.L135
 2171              	.L134:
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* For STM32F1 devices with several ADC: Only ADC1 can access internal    */
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* measurement channels (VrefInt/TempSensor). If these channels are       */
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* intended to be set on other ADC instances, an error is reported.       */
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     if (hadc->Instance == ADC1)
 2172              		.loc 1 1210 13
 2173 02ac 7B68     		ldr	r3, [r7, #4]
 2174 02ae 1B68     		ldr	r3, [r3]
 2175              		.loc 1 1210 8
 2176 02b0 1D4A     		ldr	r2, .L139
 2177 02b2 9342     		cmp	r3, r2
 2178 02b4 25D1     		bne	.L136
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
 2179              		.loc 1 1212 11
 2180 02b6 7B68     		ldr	r3, [r7, #4]
 2181 02b8 1B68     		ldr	r3, [r3]
 2182 02ba 9B68     		ldr	r3, [r3, #8]
 2183 02bc 03F40003 		and	r3, r3, #8388608
 2184              		.loc 1 1212 10
 2185 02c0 002B     		cmp	r3, #0
 2186 02c2 26D1     		bne	.L135
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       {
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
 2187              		.loc 1 1214 9
 2188 02c4 7B68     		ldr	r3, [r7, #4]
 2189 02c6 1B68     		ldr	r3, [r3]
 2190 02c8 9A68     		ldr	r2, [r3, #8]
 2191 02ca 7B68     		ldr	r3, [r7, #4]
 2192 02cc 1B68     		ldr	r3, [r3]
 2193 02ce 42F40002 		orr	r2, r2, #8388608
 2194 02d2 9A60     		str	r2, [r3, #8]
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
 2195              		.loc 1 1216 29
 2196 02d4 3B68     		ldr	r3, [r7]
 2197 02d6 1B68     		ldr	r3, [r3]
 2198              		.loc 1 1216 12
 2199 02d8 102B     		cmp	r3, #16
 2200 02da 1AD1     		bne	.L135
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         {
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2201              		.loc 1 1220 73
 2202 02dc 134B     		ldr	r3, .L139+4
 2203 02de 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cckKL5DZ.s 			page 61


 2204 02e0 134A     		ldr	r2, .L139+8
 2205 02e2 A2FB0323 		umull	r2, r3, r2, r3
 2206 02e6 9A0C     		lsrs	r2, r3, #18
 2207              		.loc 1 1220 54
 2208 02e8 1346     		mov	r3, r2
 2209 02ea 9B00     		lsls	r3, r3, #2
 2210 02ec 1344     		add	r3, r3, r2
 2211 02ee 5B00     		lsls	r3, r3, #1
 2212              		.loc 1 1220 27
 2213 02f0 BB60     		str	r3, [r7, #8]
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 2214              		.loc 1 1221 16
 2215 02f2 02E0     		b	.L137
 2216              	.L138:
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           {
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****             wait_loop_index--;
 2217              		.loc 1 1223 28
 2218 02f4 BB68     		ldr	r3, [r7, #8]
 2219 02f6 013B     		subs	r3, r3, #1
 2220 02f8 BB60     		str	r3, [r7, #8]
 2221              	.L137:
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 2222              		.loc 1 1221 33
 2223 02fa BB68     		ldr	r3, [r7, #8]
 2224 02fc 002B     		cmp	r3, #0
 2225 02fe F9D1     		bne	.L138
 2226 0300 07E0     		b	.L135
 2227              	.L136:
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****           }
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****         }
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       }
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     else
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     {
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 2228              		.loc 1 1231 7
 2229 0302 7B68     		ldr	r3, [r7, #4]
 2230 0304 9B6A     		ldr	r3, [r3, #40]
 2231 0306 43F02002 		orr	r2, r3, #32
 2232 030a 7B68     		ldr	r3, [r7, #4]
 2233 030c 9A62     		str	r2, [r3, #40]
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 2234              		.loc 1 1233 22
 2235 030e 0123     		movs	r3, #1
 2236 0310 FB73     		strb	r3, [r7, #15]
 2237              	.L135:
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     }
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2238              		.loc 1 1238 3
 2239 0312 7B68     		ldr	r3, [r7, #4]
 2240 0314 0022     		movs	r2, #0
 2241 0316 83F82420 		strb	r2, [r3, #36]
ARM GAS  /tmp/cckKL5DZ.s 			page 62


1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 2242              		.loc 1 1241 10
 2243 031a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2244              	.L115:
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** }
 2245              		.loc 1 1242 1
 2246 031c 1846     		mov	r0, r3
 2247 031e 1037     		adds	r7, r7, #16
 2248              	.LCFI61:
 2249              		.cfi_def_cfa_offset 8
 2250 0320 BD46     		mov	sp, r7
 2251              	.LCFI62:
 2252              		.cfi_def_cfa_register 13
 2253              		@ sp needed
 2254 0322 90BC     		pop	{r4, r7}
 2255              	.LCFI63:
 2256              		.cfi_restore 7
 2257              		.cfi_restore 4
 2258              		.cfi_def_cfa_offset 0
 2259 0324 7047     		bx	lr
 2260              	.L140:
 2261 0326 00BF     		.align	2
 2262              	.L139:
 2263 0328 00240140 		.word	1073816576
 2264 032c 00000000 		.word	SystemCoreClock
 2265 0330 83DE1B43 		.word	1125899907
 2266              		.cfi_endproc
 2267              	.LFE76:
 2269              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 2270              		.align	1
 2271              		.global	HAL_ADCEx_MultiModeConfigChannel
 2272              		.syntax unified
 2273              		.thumb
 2274              		.thumb_func
 2276              	HAL_ADCEx_MultiModeConfigChannel:
 2277              	.LFB77:
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** 
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** #if defined (STM32F103x6) || defined (STM32F103xB) || defined (STM32F105xC) || defined (STM32F107xC
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** /**
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following  
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         the ADCs (both ADCs of the common group).
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @note   To change back configuration from multimode to single mode, ADC must
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @param  multimode: Structure of ADC multimode configuration
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   * @retval HAL status
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   */
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
ARM GAS  /tmp/cckKL5DZ.s 			page 63


1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** {
 2278              		.loc 1 1262 1
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 64
 2281              		@ frame_needed = 1, uses_anonymous_args = 0
 2282 0000 80B5     		push	{r7, lr}
 2283              	.LCFI64:
 2284              		.cfi_def_cfa_offset 8
 2285              		.cfi_offset 7, -8
 2286              		.cfi_offset 14, -4
 2287 0002 90B0     		sub	sp, sp, #64
 2288              	.LCFI65:
 2289              		.cfi_def_cfa_offset 72
 2290 0004 00AF     		add	r7, sp, #0
 2291              	.LCFI66:
 2292              		.cfi_def_cfa_register 7
 2293 0006 7860     		str	r0, [r7, #4]
 2294 0008 3960     		str	r1, [r7]
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2295              		.loc 1 1263 21
 2296 000a 0023     		movs	r3, #0
 2297 000c 87F83F30 		strb	r3, [r7, #63]
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave={0};
 2298              		.loc 1 1264 21
 2299 0010 07F10C03 		add	r3, r7, #12
 2300 0014 3022     		movs	r2, #48
 2301 0016 0021     		movs	r1, #0
 2302 0018 1846     		mov	r0, r3
 2303 001a FFF7FEFF 		bl	memset
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Check the parameters */
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process locked */
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2304              		.loc 1 1271 3
 2305 001e 7B68     		ldr	r3, [r7, #4]
 2306 0020 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2307 0024 012B     		cmp	r3, #1
 2308 0026 01D1     		bne	.L142
 2309              		.loc 1 1271 3 is_stmt 0 discriminator 1
 2310 0028 0223     		movs	r3, #2
 2311 002a 32E0     		b	.L146
 2312              	.L142:
 2313              		.loc 1 1271 3 discriminator 2
 2314 002c 7B68     		ldr	r3, [r7, #4]
 2315 002e 0122     		movs	r2, #1
 2316 0030 83F82420 		strb	r2, [r3, #36]
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Set a temporary handle of the ADC slave associated to the ADC master     */
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2317              		.loc 1 1274 3 is_stmt 1 discriminator 2
 2318 0034 194B     		ldr	r3, .L147
 2319 0036 FB60     		str	r3, [r7, #12]
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
ARM GAS  /tmp/cckKL5DZ.s 			page 64


1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - ADC master and ADC slave DMA configuration                            */
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /*  - Multimode mode selection                                              */
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* To optimize code, all multimode settings can be set when both ADCs of    */
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* the common group are in state: disabled.                                 */
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   if ((ADC_IS_ENABLE(hadc) == RESET)                     &&
 2320              		.loc 1 1284 8 discriminator 2
 2321 0038 7B68     		ldr	r3, [r7, #4]
 2322 003a 1B68     		ldr	r3, [r3]
 2323 003c 9B68     		ldr	r3, [r3, #8]
 2324 003e 03F00103 		and	r3, r3, #1
 2325              		.loc 1 1284 6 discriminator 2
 2326 0042 012B     		cmp	r3, #1
 2327 0044 16D0     		beq	.L144
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 2328              		.loc 1 1285 8 discriminator 1
 2329 0046 FB68     		ldr	r3, [r7, #12]
 2330 0048 9B68     		ldr	r3, [r3, #8]
 2331 004a 03F00103 		and	r3, r3, #1
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 2332              		.loc 1 1284 58 discriminator 1
 2333 004e 012B     		cmp	r3, #1
 2334 0050 10D0     		beq	.L144
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance))   )
 2335              		.loc 1 1286 8
 2336 0052 7B68     		ldr	r3, [r7, #4]
 2337 0054 1B68     		ldr	r3, [r3]
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****       (ADC_IS_ENABLE(&tmphadcSlave) == RESET)            &&
 2338              		.loc 1 1285 58
 2339 0056 124A     		ldr	r2, .L147+4
 2340 0058 9342     		cmp	r3, r2
 2341 005a 0BD1     		bne	.L144
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR1,
 2342              		.loc 1 1288 5
 2343 005c 7B68     		ldr	r3, [r7, #4]
 2344 005e 1B68     		ldr	r3, [r3]
 2345 0060 5B68     		ldr	r3, [r3, #4]
 2346 0062 23F47021 		bic	r1, r3, #983040
 2347 0066 3B68     		ldr	r3, [r7]
 2348 0068 1A68     		ldr	r2, [r3]
 2349 006a 7B68     		ldr	r3, [r7, #4]
 2350 006c 1B68     		ldr	r3, [r3]
 2351 006e 0A43     		orrs	r2, r2, r1
 2352 0070 5A60     		str	r2, [r3, #4]
 2353 0072 08E0     		b	.L145
 2354              	.L144:
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                ADC_CR1_DUALMOD    ,
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****                multimode->Mode     );
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   else
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   {
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
ARM GAS  /tmp/cckKL5DZ.s 			page 65


1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 2355              		.loc 1 1297 5
 2356 0074 7B68     		ldr	r3, [r7, #4]
 2357 0076 9B6A     		ldr	r3, [r3, #40]
 2358 0078 43F02002 		orr	r2, r3, #32
 2359 007c 7B68     		ldr	r3, [r7, #4]
 2360 007e 9A62     		str	r2, [r3, #40]
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2361              		.loc 1 1299 20
 2362 0080 0123     		movs	r3, #1
 2363 0082 87F83F30 		strb	r3, [r7, #63]
 2364              	.L145:
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   }
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****     
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Process unlocked */
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2365              		.loc 1 1304 3
 2366 0086 7B68     		ldr	r3, [r7, #4]
 2367 0088 0022     		movs	r2, #0
 2368 008a 83F82420 		strb	r2, [r3, #36]
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   /* Return function status */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c ****   return tmp_hal_status;
 2369              		.loc 1 1307 10
 2370 008e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 2371              	.L146:
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_adc_ex.c **** } 
 2372              		.loc 1 1308 1 discriminator 1
 2373 0092 1846     		mov	r0, r3
 2374 0094 4037     		adds	r7, r7, #64
 2375              	.LCFI67:
 2376              		.cfi_def_cfa_offset 8
 2377 0096 BD46     		mov	sp, r7
 2378              	.LCFI68:
 2379              		.cfi_def_cfa_register 13
 2380              		@ sp needed
 2381 0098 80BD     		pop	{r7, pc}
 2382              	.L148:
 2383 009a 00BF     		.align	2
 2384              	.L147:
 2385 009c 00280140 		.word	1073817600
 2386 00a0 00240140 		.word	1073816576
 2387              		.cfi_endproc
 2388              	.LFE77:
 2390              		.text
 2391              	.Letext0:
 2392              		.file 2 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/machine/_defa
 2393              		.file 3 "/opt/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 2394              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2395              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2396              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2397              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2398              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 2399              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 2400              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /tmp/cckKL5DZ.s 			page 66


 2401              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2402              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cckKL5DZ.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_adc_ex.c
     /tmp/cckKL5DZ.s:19     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/cckKL5DZ.s:25     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/cckKL5DZ.s:244    .text.HAL_ADCEx_Calibration_Start:0000000000000158 $d
     /tmp/cckKL5DZ.s:249    .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/cckKL5DZ.s:255    .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/cckKL5DZ.s:428    .text.HAL_ADCEx_InjectedStart:0000000000000104 $d
     /tmp/cckKL5DZ.s:434    .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/cckKL5DZ.s:440    .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/cckKL5DZ.s:541    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/cckKL5DZ.s:547    .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/cckKL5DZ.s:863    .text.HAL_ADCEx_InjectedPollForConversion:00000000000001d8 $d
     /tmp/cckKL5DZ.s:873    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/cckKL5DZ.s:879    .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/cckKL5DZ.s:1060   .text.HAL_ADCEx_InjectedStart_IT:0000000000000114 $d
     /tmp/cckKL5DZ.s:1066   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/cckKL5DZ.s:1072   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/cckKL5DZ.s:1181   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/cckKL5DZ.s:1187   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/cckKL5DZ.s:1398   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000158 $d
     /tmp/cckKL5DZ.s:1407   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/cckKL5DZ.s:1413   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/cckKL5DZ.s:1541   .text.HAL_ADCEx_MultiModeStop_DMA:00000000000000d4 $d
     /tmp/cckKL5DZ.s:1546   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/cckKL5DZ.s:1552   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/cckKL5DZ.s:1645   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/cckKL5DZ.s:1651   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/cckKL5DZ.s:1714   .text.HAL_ADCEx_MultiModeGetValue:0000000000000038 $d
     /tmp/cckKL5DZ.s:1720   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/cckKL5DZ.s:1726   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/cckKL5DZ.s:1762   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/cckKL5DZ.s:1768   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/cckKL5DZ.s:2263   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000328 $d
     /tmp/cckKL5DZ.s:2270   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/cckKL5DZ.s:2276   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/cckKL5DZ.s:2385   .text.HAL_ADCEx_MultiModeConfigChannel:000000000000009c $d

UNDEFINED SYMBOLS
ADC_ConversionStop_Disable
ADC_Enable
HAL_RCCEx_GetPeriphCLKFreq
HAL_GetTick
SystemCoreClock
memset
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
